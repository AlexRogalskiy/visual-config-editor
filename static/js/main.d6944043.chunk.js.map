{"version":3,"sources":["state/Hooks.tsx","components/containers/DropdownContainer.tsx","components/panes/EditorPane.tsx","components/panes/NavigationPane.tsx","icons/components/CommandIcon.tsx","components/atoms/summaries/CommandSummary.tsx","components/atoms/form/InspectorProperty.tsx","icons/ui/DeleteItemIcon.tsx","icons/ui/DragItemIcon.tsx","icons/ui/ExpandIcon.tsx","components/containers/CollapsibleList.tsx","components/atoms/form/ListProperty.tsx","icons/ui/BreadCrumbArrowIcon.tsx","components/containers/BreadCrumbs.tsx","components/containers/inspector/subtypes/CommandSubtypes.tsx","components/menus/TabbedMenu.tsx","components/menus/definitions/StepDefinitionMenu.tsx","components/menus/definitions/subtypes/StepTypePage.tsx","components/menus/SubTypeMenu.tsx","components/containers/inspector/CommandInspector.tsx","components/containers/inspector/subtypes/ParameterSubtypes.tsx","mappings/CommandMapping.tsx","icons/components/ExecutorIcon.tsx","components/atoms/summaries/ExecutorSummary.tsx","components/containers/inspector/subtypes/ExecutorSubtypes.tsx","components/containers/inspector/ExecutorInspector.tsx","components/atoms/Card.tsx","components/menus/definitions/subtypes/ExecutorTypePage.tsx","icons/components/JobIcon.tsx","icons/ui/PlusIcon.tsx","icons/components/WorkflowIcon.tsx","mappings/JobMapping.tsx","components/atoms/nodes/JobNode.tsx","components/atoms/summaries/JobSummary.tsx","components/containers/inspector/JobInspector.tsx","mappings/ExecutorMapping.tsx","icons/components/ParameterIcon.tsx","mappings/ParameterMapping.tsx","components/menus/definitions/subtypes/ParameterTypePage.tsx","components/atoms/summaries/ParameterSummary.tsx","components/containers/inspector/ParameterInspector.tsx","mappings/ComponentMapping.tsx","components/atoms/ConnectionLine.tsx","components/atoms/Edge.tsx","components/containers/WorkflowContainer.tsx","components/panes/WorkflowsPane.tsx","components/atoms/ComponentInfo.tsx","components/containers/ParametersContainer.tsx","components/menus/definitions/InspectorDefinitionMenu.tsx","components/atoms/Definition.tsx","icons/ui/InfoIcon.tsx","icons/ui/ToolTipPointerIcon.tsx","components/atoms/Tooltip.tsx","components/containers/GuideContainer.tsx","components/containers/DefinitionsContainer.tsx","components/menus/definitions/DefinitionsMenu.tsx","state/Store.tsx","App.tsx","index.tsx"],"names":["typedHooks","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","DropdownContainer","props","useState","isExtended","setExtended","left","top","pos","setPos","buttonRef","useRef","useEffect","current","rect","getBoundingClientRect","x","y","height","updatePos","window","addEventListener","className","ref","onClick","event","stopPropagation","style","React","Children","toArray","children","EditorPane","config","state","editingConfig","loadConfig","actions","inputFile","configYAML","yml","matchSDKComment","match","index","endOfSDKComment","length","substring","type","accept","onChange","e","target","files","text","then","click","theme","language","original","modified","value","NavigationPane","navigation","NavPage","component","Component","CommandIcon","xmlns","viewBox","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","CommandSummary","data","name","InspectorProperty","label","useField","field","required","DeleteItemIcon","fillRule","clipRule","color","DragItemIcon","ExpandIcon","expanded","CollapsibleList","setExpanded","newExpanded","title","titleExpanded","ListItem","arrayHelper","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","remove","ListProperty","values","emptyText","description","render","onDragEnd","result","destination","move","source","droppableId","droppableProps","map","cmd","Object","keys","placeholder","BreadCrumbArrowIcon","BreadCrumbs","navigateBack","components","navAt","depth","curDepth","push","distance","Label","Icon","from","undefined","reverse","commandSubtypes","run","summary","command","parameters","fields","as","checkout","persist_to_workspace","attach_workspace","store_artifacts","store_test_results","save_cache","TabbedMenu","activeTab","setActiveTab","tabs","tab","Array","isArray","StepPropertiesMenu","builtIn","subtype","builtInSubtype","customCommand","initialValues","enableReinitialize","onSubmit","step","apply","steps","formikProps","selectSubtype","StepTypePageNav","definitions","setSubtype","commands","SubTypeMenuNav","SubTypeSelectPage","typePage","SubTypeMenuPage","menuPage","previous","menuProps","typeProps","selected","NewButton","navigateTo","passThrough","dataType","CommandMapping","CommandInspector","parameterSubtypes","string","boolean","integer","enum","executor","executors","env_var_name","componentParametersSubtypes","pipeline","types","job","singular","plural","defaults","transform","parseCustomCommand","store","get","add","defineCommand","update","updateCommand","undefineCommand","icon","inspector","docsInfo","link","ExecutorIcon","id","cx","cy","r","ExecutorSummary","executorSubtypes","docker","DockerExecutor","resourceClasses","docsLink","machine","MachineExecutor","macos","MacOSExecutor","windows","WindowsExecutor","ExecutorInspector","resourceClass","Card","pinned","ExecutorTypePageNav","href","JobIcon","PlusIcon","filled","maskUnits","width","mask","WorkflowIcon","JobMapping","parseJob","jobs","defineJob","updateJob","undefineJob","dragTarget","node","params","WorkflowJob","elements","workflows","selectedWorkflow","dragging","setConnecting","removeWorkflowElement","connecting","updateConnecting","handles","requiredBy","requires","hovering","setHovering","trackHovering","entering","leaving","postEnter","postLeave","onMouseEnter","reduce","n","onMouseLeave","nodeRef","connectionNodeId","connectionHandleType","connectionHandleId","onDragOver","preventDefault","onDrop","applyToNode","applyToData","old","new","workflowJob","element","isNode","updateWorkflowJob","start","draggable","onDragStart","position","Position","Right","Left","StepTypePage","ExecutorMapping","image","resource_class","xcode","reusable","ReusableExecutor","parseExecutor","defineExecutor","updateExecutor","undefineExecutor","nodeData","oldJob","Job","subtypes","getSubtype","reusableExec","reusableExecsKeys","find","includes","ParameterIcon","ParameterMapping","parseParameter","defineParameter","updateParameter","undefineParameter","parameter","dataMappings","mapping","CustomCommand","CustomParameter","ConnectionLine","sourceX","sourceY","sourcePosition","targetX","targetY","targetPosition","connectionLineType","connectionLineStyle","flowState","handle","bounds","startX","startY","endX","endY","dist","invalid","end","snapTo","snapToBounds","Edge","gap","arrowHeadType","markerEndId","WorkflowPane","zoom","setTransform","addWorkflowElement","setWorkflowElements","connectingTo","setConnectingTo","handleMouseUp","targetJob","startName","addEdge","sourceHandle","targetHandle","animated","removeEventListener","NodesDebugger","flowActions","setConnectionNodeId","setConnectingPosition","setConnectionPosition","onDrag","onMouseMove","containerBounds","closest","clientX","clientY","nodeMapping","round","val","Math","floor","workflowNode","v4","connectable","dragHandle","onMove","selectNodesOnDrag","nodeTypes","assign","edgeTypes","snapToGrid","connectionMode","ConnectionMode","Loose","connectionLineComponent","variant","BackgroundVariant","Dots","bgClassName","size","WorkflowsPane","selectWorkflow","workflow","num","ComponentInfo","ParameterContainer","arrayHelpers","dataMapping","InspectorDefinitionMenu","passBackKey","defaultValue","generateConfig","setGuideStep","guideStep","submitToStore","editing","error","unpacked","iconComponent","getIcon","validateOnBlur","validate","newDefinition","submitData","guide","InspectorDefinitionMenuNav","DefinitionIcon","Definition","Summary","setDragging","generated","generate","flattened","entries","key","InfoIcon","ToolTipPointerIcon","direction","right","bottom","horizontal","ToolTip","GuideContainer","DefinitionsContainer","items","info","item","DefinitionsMenuNav","workflowGraphs","updateConfig","persistProps","isExpanded","i","Actions","action","payload","setPlaceholder","curNav","jumpedFrom","travelTo","Error","DefinitionsMenu","addWorkflow","concat","removeWorkflow","filter","console","parseConfig","stringify","flow","Workflow","defs","Config","CustomParametersList","Store","App","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6944043.chunk.js","sourcesContent":["import { createTypedHooks } from 'easy-peasy';\nimport { StoreActions, StoreModel } from './Store';\n\nconst typedHooks = createTypedHooks<StoreModel & StoreActions>();\n\nexport const useStoreActions = typedHooks.useStoreActions;\nexport const useStoreDispatch = typedHooks.useStoreDispatch;\nexport const useStoreState = typedHooks.useStoreState;\n","import React, { ReactChild, useEffect, useRef, useState } from 'react';\n\nconst DropdownContainer = (props: {\n  className?: string;\n  children: ReactChild[] | ReactChild;\n}) => {\n  const [isExtended, setExtended] = useState(false);\n  const [pos, setPos] = useState({ left: 0, top: 0 });\n  const buttonRef = useRef<HTMLButtonElement>(null);\n\n  const updatePos = () => {\n    if (!buttonRef.current) {\n      return;\n    }\n\n    const rect = buttonRef.current.getBoundingClientRect();\n\n    setPos({ left: rect.x, top: rect.y + rect.height });\n  };\n\n  useEffect(() => {\n    updatePos();\n\n    // hide the box when a click event fires\n    window.addEventListener(\n      'click',\n      () => {\n          setExtended(false);\n      },\n    );\n  }, [isExtended]);\n\n  return (\n    <>\n      <button\n        className={props.className}\n        ref={buttonRef}\n        onClick={(event) => {\n          setExtended(!isExtended);\n          // prevent the click event from bubbling up to event that will close the drawer\n          event.stopPropagation();\n        }}\n      >\n        •••\n      </button>\n      {isExtended && (\n        <div className=\"fixed w-max h-max z-20 flex flex-col\" style={pos}>\n          {React.Children.toArray(props.children)}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default DropdownContainer;\n","import Editor, { DiffEditor } from '@monaco-editor/react';\nimport { useRef } from 'react';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport DropdownContainer from '../containers/DropdownContainer';\n\nconst EditorPane = () => {\n  const config = useStoreState((state) => state.config);\n  const editingConfig = useStoreState((state) => state.editingConfig);\n  const loadConfig = useStoreActions((actions) => actions.loadConfig);\n  const inputFile = useRef<HTMLInputElement>(null);\n\n  const configYAML = (yml: string) => {\n    const matchSDKComment = yml?.match('# SDK Version: .*\\n');\n\n    if (yml && matchSDKComment && matchSDKComment.index) {\n      const comment = `# VCE Version: 0.2.0\\n# Modeled with the CircleCI visual config editor.\\n# For more information, see https://github.com/CircleCI-Public/visual-config-editor\\n`;\n      const endOfSDKComment = matchSDKComment.index + matchSDKComment[0].length;\n\n      return (\n        yml.substring(0, endOfSDKComment) +\n        comment +\n        yml.substring(endOfSDKComment, yml.length)\n      );\n    }\n\n    return yml;\n  };\n\n  return (\n    <div className=\"bg-circle-gray-900 h-2/5 w-full flex flex-col\">\n      <div className=\"border-b text-xl border-circle-gray-800 font-bold flex flex-row\">\n        <div className=\"ml-4 border-b-4 px-3 py-3 w-max text-sm tracking-wide font-bold text-white border-white\">\n          CONFIG\n        </div>\n        <div className=\"p-2 ml-auto\">\n          <input\n            type=\"file\"\n            accept=\".yml,.yaml\"\n            ref={inputFile}\n            className=\"hidden\"\n            onChange={(e) => {\n              if (!e.target.files) {\n                return;\n              }\n\n              e.target.files[0].text().then((yml) => {\n                loadConfig(yml);\n              });\n            }}\n          />\n          <DropdownContainer className=\"rounded-md bg-circle-blue text-white px-2\">\n            <div className=\"bg-white flex-col flex rounded shadow text-base\">\n              <button\n                className=\"border-b border-circle-gray-300 px-8\"\n                onClick={(e) => {\n                  inputFile.current?.click();\n                  e.stopPropagation();\n                }}\n              >\n                Open\n              </button>\n              <button>Save</button>\n            </div>\n          </DropdownContainer>\n        </div>\n      </div>\n      <div className=\"flex-1 overflow-hidden\">\n        {editingConfig ? (\n          <DiffEditor\n            theme=\"vs-dark\"\n            language=\"yaml\"\n            original={config && configYAML(config)}\n            modified={editingConfig && configYAML(editingConfig)}\n          />\n        ) : (\n          <Editor\n            theme=\"vs-dark\"\n            language=\"yaml\"\n            value={config && configYAML(config)}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EditorPane;\n","import { useStoreState } from '../../state/Hooks';\n\n/**\n * @see\n * @returns\n */\nconst NavigationPane = () => {\n  const navigation = useStoreState((state) => state.navigation);\n  const NavPage = navigation.component.Component;\n\n  return (\n    <div className=\"h-full border-l border-circle-gray-300 w-80 pt-6 bg-white flex flex-col overflow-y-hidden\">\n      <NavPage {...navigation.props} />\n    </div>\n  );\n};\n\nexport default NavigationPane;\n","import { IconProps } from '../IconProps';\n\nconst CommandIcon = (props: IconProps) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    className={props.className}\n    fill=\"none\"\n    stroke=\"black\"\n  >\n    <path\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      strokeWidth={2}\n      d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\"\n    />\n  </svg>\n);\n\nexport default CommandIcon;\n","import { CustomCommand } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Commands/exports/Reusable';\nimport CommandIcon from '../../../icons/components/CommandIcon';\n\nconst CommandSummary: React.FunctionComponent<{ data: CustomCommand }> = (\n  props,\n) => {\n  return (\n    <div className=\"flex flex-row\">\n      <CommandIcon className=\"ml-1 mr-2 w-5 h-5\"/> {props.data.name}\n    </div>\n  );\n};\n\nexport default CommandSummary;\n","import { Field, useField } from 'formik';\nimport { ReactElement } from 'react';\n\nexport interface InspectorFieldProps {\n  label: string;\n  name: any;\n  as?: string;\n  type?: string;\n  value?: any;\n  required?: boolean;\n  onChange?: (e: any) => void;\n  children?: ReactElement[] | ReactElement;\n}\n\nconst InspectorProperty = ({ label, ...props }: InspectorFieldProps) => {\n  const [field] = useField(props);\n  return (\n    <div className={`${props.type === 'checkbox' && `flex flex-row`} mb-3`}>\n      <div className=\"flex flex-row mb-2\">\n        <p className=\"font-bold leading-5 tracking-wide\">{label}</p>\n        {props.required && (\n          <span className=\"ml-auto tracking-wide leading-6 text-sm text-circle-gray-400 font-medium\">\n            Required\n          </span>\n        )}\n      </div>\n      <Field\n        {...field}\n        {...props}\n        className={`${props.type !== 'checkbox' ? 'w-full' : 'ml-auto'} \n             border-circle-gray-300 border-2 rounded p-1 `}\n      >\n        {props.children}\n      </Field>\n    </div>\n  );\n};\n\nexport default InspectorProperty;\n","import { IconProps } from '../IconProps';\n\nconst DeleteItemIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 12 12\" className={props.className}>\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M7.42616 6L11.7046 10.2785C12.0985 10.6723 12.0985 11.3108 11.7046 11.7046C11.3108 12.0985 10.6723 12.0985 10.2785 11.7046L6 7.42616L1.72153 11.7046C1.3277 12.0985 0.68919 12.0985 0.295367 11.7046C-0.0984557 11.3108 -0.0984557 10.6723 0.295367 10.2785L4.57384 6L0.295367 1.72153C-0.0984557 1.3277 -0.0984557 0.68919 0.295367 0.295367C0.68919 -0.0984557 1.3277 -0.0984557 1.72153 0.295367L6 4.57384L10.2785 0.295367C10.6723 -0.0984557 11.3108 -0.0984557 11.7046 0.295367C12.0985 0.68919 12.0985 1.3277 11.7046 1.72153L7.42616 6V6Z\"\n      fill={props.color}\n    />\n  </svg>\n);\n\nexport default DeleteItemIcon;\n","import { IconProps } from '../IconProps';\n\nconst DragItemIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 16 6\" className={props.className} fill={props.color}>\n    <path d=\"M16 1C16 0.447715 15.5523 0 15 0H1C0.447715 0 0 0.447715 0 1C0 1.55228 0.447715 2 1 2H15C15.5523 2 16 1.55228 16 1ZM0 5C0 5.55228 0.447715 6 1 6H15C15.5523 6 16 5.55228 16 5C16 4.44772 15.5523 4 15 4H1C0.447715 4 0 4.44772 0 5Z\"></path>\n  </svg>\n);\n\nexport default DragItemIcon;\n","import { IconProps } from '../IconProps';\n\nconst ExpandIcon = (props: IconProps & { expanded: boolean }) => (\n  <svg viewBox=\"0 0 14 14\" className={props.className}>\n    <path\n      d={\n        props.expanded\n          ? 'M4.20710678,6 L11.7928932,6 C12.0690356,6 12.2928932,6.22385763 12.2928932,6.5 C12.2928932,6.63260824 12.2402148,6.7597852 12.1464466,6.85355339 L8.35355339,10.6464466 C8.15829124,10.8417088 7.84170876,10.8417088 7.64644661,10.6464466 L3.85355339,6.85355339 C3.65829124,6.65829124 3.65829124,6.34170876 3.85355339,6.14644661 C3.94732158,6.05267842 4.07449854,6 4.20710678,6 Z'\n          : 'M6,11.7928932 L6,4.20710678 C6,3.93096441 6.22385763,3.70710678 6.5,3.70710678 C6.63260824,3.70710678 6.7597852,3.7597852 6.85355339,3.85355339 L10.6464466,7.64644661 C10.8417088,7.84170876 10.8417088,8.15829124 10.6464466,8.35355339 L6.85355339,12.1464466 C6.65829124,12.3417088 6.34170876,12.3417088 6.14644661,12.1464466 C6.05267842,12.0526784 6,11.9255015 6,11.7928932 Z'\n      }\n    ></path>\n  </svg>\n);\n\nexport default ExpandIcon;\n","import { ReactElement, useState } from 'react';\nimport ExpandIcon from '../../icons/ui/ExpandIcon';\n\nexport interface CollapsibleListProps {\n  title: string;\n  titleExpanded?: ReactElement;\n  children: ReactElement;\n  expanded?: boolean;\n  className?: string;\n  onChange?: (expanded: boolean) => void;\n}\n\nconst CollapsibleList = (props: CollapsibleListProps) => {\n  const [expanded, setExpanded] = useState(props.expanded || false);\n\n  return (\n    <div className={props.className}>\n      <div className=\"flex flex-row\">\n        <button\n          onClick={(e) => {\n            const newExpanded = !expanded;\n\n            setExpanded(newExpanded);\n            props.onChange && props.onChange(newExpanded);\n          }}\n          type=\"button\"\n          className=\"flex flex-row flex-1\"\n        >\n          <ExpandIcon className=\"w-3 h-5 mr-3\" expanded={expanded} />\n          <p className=\"font-bold leading-5 tracking-wide\">{props.title}</p>\n        </button>\n        {expanded && props.titleExpanded}\n      </div>\n      {expanded && <div className=\"ml-4\">{props.children}</div>}\n    </div>\n  );\n};\n\nexport default CollapsibleList;\n","import { ArrayHelpers, FieldArray, useField } from 'formik';\nimport { ReactElement } from 'react';\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\nimport DeleteItemIcon from '../../../icons/ui/DeleteItemIcon';\nimport DragListIcon from '../../../icons/ui/DragItemIcon';\nimport CollapsibleList from '../../containers/CollapsibleList';\nimport { InspectorFieldProps } from './InspectorProperty';\n\nexport type ListPropertyProps = InspectorFieldProps & {\n  titleExpanded?: ReactElement;\n  values?: any;\n  description?: string;\n  expanded?: boolean;\n  emptyText?: string;\n};\n\nexport type ListItemProps = {\n  index: number;\n  name: string;\n  arrayHelper: ArrayHelpers;\n};\n\nconst ListItem = ({ index, name, arrayHelper }: ListItemProps) => {\n  return (\n    <Draggable key={index} draggableId={`${index}`} index={index}>\n      {(provided, snapshot) => (\n        <div\n          className=\"w-full mb-2 p-1 px-3 text-sm \nbg-white border border-circle-gray-300 rounded-md2 flex flex-row\"\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n        >\n          <button\n            className=\"flex-1 cursor-pointer text-left text-circle-black leading-6\"\n            type=\"button\"\n          >\n            {name}\n          </button>\n          <div className=\"ml-auto mr-3\" {...provided.dragHandleProps}>\n            <DragListIcon className=\"w-4 h-6 py-1\" color=\"#AAAAAA\" />\n          </div>\n          <button\n            onClick={() => {\n              arrayHelper.remove(index);\n            }}\n            type=\"button\"\n            className=\"my-auto\"\n          >\n            <DeleteItemIcon className=\"w-3 h-3\" color=\"#AAAAAA\" />\n          </button>\n        </div>\n      )}\n    </Draggable>\n  );\n};\n\nconst ListProperty = ({\n  label,\n  values,\n  description,\n  emptyText,\n  ...props\n}: InspectorFieldProps & ListPropertyProps) => {\n  const [field] = useField(props);\n\n  return (\n    <CollapsibleList\n      title={label}\n      titleExpanded={props.titleExpanded}\n      expanded={props.expanded}\n    >\n      {values?.length > 0 ? (\n        <FieldArray\n          {...field}\n          name={props.name}\n          render={(arrayHelper) => (\n            <DragDropContext\n              onDragEnd={(result) => {\n                if (result.destination) {\n                  arrayHelper.move(\n                    result.source.index,\n                    result.destination.index,\n                  );\n                }\n              }}\n            >\n              <Droppable droppableId=\"droppable\">\n                {(provided) => (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    className=\"p-2 pr-0\"\n                  >\n                    {values.map((cmd: any, index: number) => (\n                      <ListItem\n                        name={Object.keys(cmd)[0]}\n                        key={index}\n                        index={index}\n                        arrayHelper={arrayHelper}\n                      />\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            </DragDropContext>\n          )}\n        />\n      ) : (\n        <p className=\"ml-2 font-medium text-sm text-circle-gray-500\">\n          {emptyText}\n        </p>\n      )}\n    </CollapsibleList>\n  );\n};\n\nexport default ListProperty;\n","import { IconProps } from '../IconProps';\n\nconst BreadCrumbArrowIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 16 16\" className={props.className} fill={props.color}>\n    <path d=\"M11.6568842,7.24302798 C11.9577895,7.54393324 12.0268424,7.98889307 11.864043,8.35591473 C11.8154617,8.46509554 11.746442,8.56741392 11.6568842,8.65697164 C11.6570333,8.65709247 11.6569588,8.65716701 11.6568842,8.65724154 L6.70713677,13.606989 C6.31661248,13.9975133 5.6834475,13.9975133 5.29292321,13.606989 L5.29286323,13.606929 C4.90233894,13.2164047 4.90233894,12.5832398 5.29286323,12.1927155 L9.53557889,7.94999981 L5.29286323,3.70728415 C4.90233894,3.31675986 4.90233894,2.68359488 5.29286323,2.29307059 L5.29292321,2.29301061 C5.6834475,1.90248631 6.31661248,1.90248631 6.70713677,2.29301061 L11.6568842,7.24275807 C11.6569588,7.24283261 11.6570333,7.24290715 11.6571078,7.2429817 Z\"></path>\n  </svg>\n);\n\nexport default BreadCrumbArrowIcon;\n","import { ReactElement } from 'react';\nimport BreadCrumbArrowIcon from '../../icons/ui/BreadCrumbArrowIcon';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport { NavigationModel } from '../../state/Store';\n\nconst BreadCrumbs = () => {\n  const navigation = useStoreState((state) => state.navigation);\n  const navigateBack = useStoreActions((actions) => actions.navigateBack);\n\n  let components: ReactElement[] = [];\n  let navAt: NavigationModel | undefined = navigation;\n  let depth = 0;\n\n  do {\n    const curDepth = depth;\n    if (depth > 0) {\n      components.push(\n        <BreadCrumbArrowIcon\n          className=\"pl-1 w-5 h-5\"\n          key={`breadcrumb-${curDepth}-arrow`}\n          color=\"#6A6A6A\"\n        />,\n      );\n    }\n\n    components.push(\n      <button\n        className={\n          curDepth === 0\n            ? 'font-medium text-black ml-1 cursor-default whitespace-nowrap'\n            : 'text-circle-gray-500 hover:underline hover:text-black overflow-ellipsis whitespace-nowrap'\n        }\n        key={`breadcrumb-${curDepth}-link`}\n        onClick={() => {\n          curDepth > 0 && navigateBack({ distance: curDepth });\n        }}\n      >\n        {curDepth > 1 ? '...' : navAt.component.Label(navAt.props)}\n      </button>,\n    );\n\n    if (navAt.component.Icon) {\n      const Icon = navAt.component.Icon(navAt.props);\n      Icon &&\n        components.push(<div key={`breadcrumb-${curDepth}-icon`}>{Icon}</div>);\n    }\n\n    depth++;\n    navAt = navAt.from;\n  } while (navAt !== undefined);\n\n  components.reverse();\n\n  return (\n    <nav className=\"px-6\">\n      <div className=\"flex items-center\">\n        {components.map((component) => component)}\n      </div>\n    </nav>\n  );\n};\n\nexport default BreadCrumbs;\n","import { Field } from 'formik';\nimport { ReactElement } from 'react';\nimport InspectorProperty from '../../../atoms/form/InspectorProperty';\n\nexport interface CommandSubTypes {\n  [command: string]: {\n    name: string;\n    description?: string;\n    summary?: (command: any) => ReactElement;\n    fields: ReactElement;\n  };\n}\n\nconst commandSubtypes: CommandSubTypes = {\n  run: {\n    name: 'Run a command',\n    description: 'Used for invoking all command-line programs',\n    summary: (command) => (\n      <p className=\"inline\">{command.parameters.command}</p>\n    ),\n    fields: (\n      <div>\n        <InspectorProperty\n          label=\"Command\"\n          as=\"textarea\"\n          required\n          name=\"parameters.command\"\n        />\n        <InspectorProperty label=\"Shell\" name=\"parameters.shell\" />\n        <InspectorProperty\n          label=\"Background\"\n          type=\"checkbox\"\n          name=\"parameters.background\"\n        />\n        <InspectorProperty\n          label=\"Working Directory\"\n          name=\"parameters.working_directory\"\n        />\n        <InspectorProperty\n          label=\"No Output Timeout\"\n          name=\"parameters.no_output_timeout\"\n        />\n        <InspectorProperty label=\"When\" as=\"select\" name=\"parameters.when\">\n          <option value=\"undefined\">Select When</option>\n          <option value=\"always\">Always</option>\n          <option value=\"on_success\">On Success</option>\n          <option value=\"on_fail\">On Fail</option>\n        </InspectorProperty>\n      </div>\n    ),\n  },\n  checkout: {\n    name: 'Checkout',\n    description:\n      'A special step used to check out source code to the configured path',\n    fields: <InspectorProperty label=\"Path\" name=\"parameters.path\" />,\n  },\n  persist_to_workspace: {\n    name: 'Persist To Workspace',\n    description:\n      'Persist a temporary file to be used by another job in the workflow',\n    fields: (\n      <div>\n        <InspectorProperty label=\"Root\" name=\"parameters.root\" required />\n        <InspectorProperty label=\"Path\" name=\"parameters.path\" required />\n      </div>\n    ),\n  },\n  attach_workspace: {\n    name: 'Attach Workspace',\n    description: 'Attach the workflow’s workspace to the current container',\n    fields: <InspectorProperty label=\"At\" name=\"parameters.at\" required />,\n  },\n  store_artifacts: {\n    name: 'Store Artifacts',\n    description: 'Step to store artifacts such as logs and binaries',\n    fields: (\n      <div>\n        Path\n        <Field\n          required\n          name=\"parameters.path\"\n          className=\"p-1 w-full border-circle-light-blue border-2 rounded\"\n        ></Field>\n        <br />\n        Destination\n        <Field\n          name=\"parameters.destination\"\n          className=\"p-1 w-full border-circle-gray-300 border-2 rounded\"\n        ></Field>\n      </div>\n    ),\n  },\n  store_test_results: {\n    name: 'Store Test Results',\n    description: 'Upload and store test results for a build',\n    fields: <InspectorProperty label=\"Path\" name=\"parameters.path\" required />,\n  },\n  save_cache: {\n    name: 'Save Cache',\n    description:\n      'Generates and stores a cache of a file or directory in object storage',\n    fields: (\n      <div>\n        <InspectorProperty label=\"Path\" name=\"parameters.path\" required />\n        <InspectorProperty label=\"Key\" name=\"parameters.key\" required />\n        <InspectorProperty label=\"When\" name=\"parameters.when\" as=\"select\">\n          <option value=\"undefined\">Select When</option>\n          <option value=\"always\">Always</option>\n          <option value=\"on_success\">On Success</option>\n          <option value=\"on_fail\">On Fail</option>\n        </InspectorProperty>\n      </div>\n    ),\n  },\n};\n\nexport { commandSubtypes };\n","import { useState } from 'react';\n\nexport interface TabbedPaneProps {\n  tabs: string[];\n  activeTab?: number;\n  children: React.ReactNode | React.ReactNode[];\n}\n\nconst TabbedMenu = (props: TabbedPaneProps) => {\n  const [activeTab, setActiveTab] = useState(props.activeTab || 0);\n\n  return (\n    <div className=\"h-full\">\n      <div className=\"flex border-b border-circle-gray-300 pl-6\">\n        {props.tabs.map((tab, index) => (\n          <button\n            type=\"button\"\n            key={index}\n            className={`text-sm tracking-wide px-3 py-3 font-bold text-center ${\n              index === activeTab\n                ? 'border-black border-b-4 text-circle-black'\n                : 'text-circle-gray-600 mb-1'\n            }`}\n            onClick={() => setActiveTab(index)}\n          >\n            {tab}\n          </button>\n        ))}\n      </div>\n      {Array.isArray(props.children)\n        ? props.children[activeTab]\n        : props.children}\n    </div>\n  );\n};\n\nexport default TabbedMenu;\n","import { reusable } from '@circleci/circleci-config-sdk';\nimport { Form, Formik } from 'formik';\nimport { useStoreActions } from '../../../state/Hooks';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport { commandSubtypes } from '../../containers/inspector/subtypes/CommandSubtypes';\nimport { SubTypeMenuPageProps } from '../SubTypeMenu';\nimport TabbedMenu from '../TabbedMenu';\n\nconst StepPropertiesMenu = (\n  props: SubTypeMenuPageProps<string | reusable.CustomCommand>,\n) => {\n  const navigateBack = useStoreActions((actions) => actions.navigateBack);\n  const builtIn = typeof props.subtype === 'string';\n  const builtInSubtype = builtIn\n    ? commandSubtypes[props.subtype as string]\n    : undefined;\n  const customCommand = !builtIn\n    ? (props.subtype as reusable.CustomCommand)\n    : undefined;\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <header>\n        <BreadCrumbs />\n        <h1 className=\"ml-6 text-2xl py-2 font-bold\">New Step</h1>\n      </header>\n      <Formik\n        initialValues={{ parameters: undefined }}\n        enableReinitialize={true}\n        onSubmit={(step) => {\n\n          navigateBack({\n            distance: 1,\n            apply: (values: any) => {\n              const name = builtIn ? props.subtype: customCommand?.name;\n\n              values.steps = [\n                ...values.steps,\n                {\n                  [name as string]: step.parameters,\n                },\n              ];\n\n              return values;\n            },\n          });\n        }}\n      >\n        {(formikProps) => (\n          <Form className=\"flex flex-col flex-1\">\n            <TabbedMenu tabs={['PROPERTIES']}>\n              <div className=\"p-6\">\n                <button\n                  className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n                  type=\"button\"\n                  onClick={() => {\n                    props.selectSubtype();\n                  }}\n                >\n                  <p className=\"font-bold\">\n                    {builtInSubtype\n                      ? builtInSubtype?.name\n                      : customCommand?.name}\n                  </p>\n                  <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                    {builtInSubtype\n                      ? builtInSubtype?.description\n                      : customCommand?.description}\n                  </p>\n                </button>\n                {builtInSubtype ? builtInSubtype?.fields : 'custom fields'}\n              </div>\n            </TabbedMenu>\n\n            <span className=\"border-b border-circle-gray-300 mt-auto\" />\n            <button\n              type=\"submit\"\n              className=\"text-white text-sm font-medium p-2 m-6 bg-circle-blue duration:50 transition-all rounded-md2\"\n            >\n              Save Step\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default StepPropertiesMenu;\n","import { CustomCommand } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Commands/exports/Reusable';\nimport { useStoreState } from '../../../../state/Hooks';\nimport { NavigationComponent } from '../../../../state/Store';\nimport BreadCrumbs from '../../../containers/BreadCrumbs';\nimport { commandSubtypes } from '../../../containers/inspector/subtypes/CommandSubtypes';\nimport TabbedMenu from '../../TabbedMenu';\nimport { SubTypeSelectPageProps } from '../../SubTypeMenu';\n\nconst StepTypePage = (props: SubTypeSelectPageProps<string | CustomCommand>) => {\n  const definitions = useStoreState((state) => state.definitions);\n\n  return (\n    <div>\n      <header>\n        {/* <WorkflowIcon className=\"w-6 h-6 mr-1\" color=\"#6A6A6A\" /> */}\n        <BreadCrumbs />\n        <h1 className=\"ml-6 text-2xl py-3 font-bold\">Step Type</h1>\n      </header>\n      <TabbedMenu tabs={['BUILT-IN', 'COMMANDS', 'ORBS']}>\n        <div className=\"p-6\">\n          {Object.keys(commandSubtypes).map((subtype) => (\n            <button\n              key={subtype}\n              type=\"button\"\n              className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n              onClick={() => {\n                props.setSubtype(subtype);\n              }}\n            >\n              <p className=\"font-bold\">{commandSubtypes[subtype].name}</p>\n              <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                {commandSubtypes[subtype].description}\n              </p>\n            </button>\n            // <InspectorProperty name={command} label={commandProps[command].text} as=\"card\" />\n          ))}\n        </div>\n        <div className=\"p-6\">\n          {definitions.commands.map((command) => (\n            <button\n              key={command.name}\n              type=\"button\"\n              className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n              onClick={() => {\n                props.setSubtype(command);\n              }}\n            >\n              <p className=\"font-bold\">{command.name}</p>\n              <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                {/* {command.description} */}\n                Command description will show here\n              </p>\n            </button>\n            // <InspectorProperty name={command} label={commandProps[command].text} as=\"card\" />\n          ))}\n        </div>\n        <div>User defined commands will show here</div>\n        <div>Predefined orb steps will show here</div>\n      </TabbedMenu>\n    </div>\n  );\n};\n\nconst StepTypePageNav: NavigationComponent = {\n  Component: StepTypePage,\n  Label: () => <p>New Step</p>,\n};\n\nexport default StepTypePageNav;\n","import { useState } from 'react';\nimport { NavigationComponent } from '../../state/Store';\n/** TODO: ISubType interface for component mappings? */\n\nexport type SubTypeMenuProps<T> = {\n  typePage: NavigationComponent;\n  typeProps?: unknown;\n  menuPage: React.FunctionComponent<SubTypeMenuPageProps<T>>;\n  menuProps?: unknown;\n};\nexport type SubTypeReference<T> = T;\nexport type SubTypeSelectPageProps<T> = {\n  setSubtype: (subtype: SubTypeReference<T>) => void;\n};\nexport type SubTypeMenuPageProps<T> = {\n  subtype: SubTypeReference<T>;\n  selectSubtype: () => void;\n};\nexport interface SelectedSubType<T> {\n  current?: SubTypeReference<T>;\n  previous?: SubTypeReference<T>;\n}\n\nconst SubTypeMenu = <SubTypeRef,>(props: SubTypeMenuProps<SubTypeRef>) => {\n  const [subtype, setSubtype] = useState<SelectedSubType<SubTypeRef>>();\n\n  const updateSubtype = (selected: SubTypeReference<SubTypeRef>) => {\n    setSubtype({ current: selected, previous: subtype?.current });\n  };\n\n  const navBack = () => {\n    setSubtype({ current: undefined, previous: subtype?.current });\n  };\n\n  const SubTypeSelectPage = props.typePage.Component as React.FunctionComponent<\n    SubTypeSelectPageProps<SubTypeRef>\n  >;\n  const SubTypeMenuPage = props.menuPage;\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      {subtype?.current ? (\n        <SubTypeMenuPage\n          subtype={subtype.current}\n          selectSubtype={navBack}\n          {...props.menuProps}\n        />\n      ) : (\n        <SubTypeSelectPage {...props.typeProps} setSubtype={updateSubtype} />\n      )}\n    </div>\n  );\n};\n\nconst SubTypeMenuNav: NavigationComponent = {\n  Component: SubTypeMenu,\n  Label: <SubTypeRef, >(props: SubTypeMenuProps<SubTypeRef>) => props.typePage.Label(props),\n  Icon: <SubTypeRef, >(props: SubTypeMenuProps<SubTypeRef>) =>\n    props.typePage.Icon ? props.typePage.Icon(props) : null,\n};\n\nexport default SubTypeMenuNav;\n","import { FormikValues } from 'formik';\nimport CommandMapping from '../../../mappings/CommandMapping';\nimport { useStoreActions } from '../../../state/Hooks';\nimport { DefinitionModel } from '../../../state/Store';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport ListProperty from '../../atoms/form/ListProperty';\nimport StepPropertiesMenu from '../../menus/definitions/StepDefinitionMenu';\nimport StepTypePageNav from '../../menus/definitions/subtypes/StepTypePage';\nimport SubTypeMenuNav from '../../menus/SubTypeMenu';\n\nconst NewButton = (\n  props: FormikValues & {\n    definitions: DefinitionModel;\n  },\n) => {\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  return (\n    <button\n      type=\"button\"\n      onClick={() => {\n        navigateTo({\n          component: SubTypeMenuNav,\n          props: {\n            typePage: StepTypePageNav,\n            menuPage: StepPropertiesMenu,\n            passThrough: { dataType: CommandMapping },\n          },\n          values: props.values,\n        });\n      }}\n      className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n    >\n      New\n    </button>\n  );\n};\n\nconst CommandInspector = (\n  props: FormikValues & { definitions: DefinitionModel },\n) => {\n  return (\n    <div>\n      <InspectorProperty\n        name=\"name\"\n        label=\"Name\"\n        required\n        value={props.values.name}\n      />\n      <InspectorProperty name=\"description\" label=\"Description\" as=\"textarea\" />\n      <ListProperty\n        label=\"Steps\"\n        name=\"steps\"\n        values={props.values.steps}\n        expanded\n        required\n        emptyText=\"No steps defined yet. At least one step is required.\"\n        titleExpanded={<NewButton values={props.values} definitions={props.definitions} />}\n      />\n    </div>\n  );\n};\n\nexport default CommandInspector;\n","import { ReusableExecutor } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Reusable';\nimport { SubTypeMapping } from '../../../../mappings/ComponentMapping';\nimport InspectorProperty from '../../../atoms/form/InspectorProperty';\n\nexport interface ComponentParameterType {\n  types: string[];\n}\n\nexport interface ParameterTypes {\n  [key: string]: SubTypeMapping;\n}\n\nexport interface ComponentParameterMapping {\n  pipeline: ComponentParameterType;\n  executor: ComponentParameterType;\n  job: ComponentParameterType;\n  command: ComponentParameterType;\n}\n\nconst parameterSubtypes: ParameterTypes = {\n  string: {\n    text: 'String',\n    description: 'Pass text data',\n    fields: (\n      <InspectorProperty\n        name=\"defaultValue\"\n        as=\"textarea\"\n        label=\"Default Value\"\n      />\n    ),\n  },\n  boolean: {\n    text: 'Boolean',\n    fields: (\n      <InspectorProperty name=\"defaultValue\" as=\"select\" label=\"Default Value\">\n        <option value=\"undefined\">No default</option>\n        <option value=\"false\">false</option>\n        <option value=\"true\">true</option>\n      </InspectorProperty>\n    ),\n  },\n  integer: {\n    text: 'Integer',\n    fields: (\n      <InspectorProperty\n        name=\"defaultValue\"\n        as=\"number\"\n        label=\"Default Value\"\n      />\n    ),\n  },\n  enum: {\n    text: 'Enum',\n    fields: <input type=\"text\" />,\n  },\n  executor: {\n    text: 'Executor',\n    fields: (props: { executors: ReusableExecutor[] }) => (\n      <InspectorProperty\n        label=\"Executor\"\n        as=\"select\"\n        name=\"executor.name\"\n        required\n      >\n        {props.executors?.map((executor) => (\n          <option value={executor.name} key={executor.name}>\n            {executor.name}\n          </option>\n        ))}\n      </InspectorProperty>\n    ),\n  },\n  steps: {\n    text: 'Steps',\n    fields: <input type=\"text\" />,\n  },\n  env_var_name: {\n    text: 'Environment Variable Name',\n    fields: <input type=\"text\" />,\n  },\n};\n\nconst componentParametersSubtypes: ComponentParameterMapping = {\n  pipeline: {\n    types: ['string', 'boolean', 'integer', 'enum'],\n  },\n  executor: { types: ['string', 'boolean', 'integer', 'enum'] },\n  job: {\n    types: [\n      'string',\n      'boolean',\n      'integer',\n      'enum',\n      'executor',\n      'steps',\n      'env_var_name',\n    ],\n  },\n  command: {\n    types: ['string', 'boolean', 'integer', 'enum', 'steps', 'env_var_name'],\n  },\n};\n\nexport { componentParametersSubtypes, parameterSubtypes };\n","import { parseCustomCommand } from '@circleci/circleci-config-sdk';\nimport { CustomCommand } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Commands/exports/Reusable';\nimport CommandSummary from '../components/atoms/summaries/CommandSummary';\nimport CommandInspector from '../components/containers/inspector/CommandInspector';\nimport { componentParametersSubtypes } from '../components/containers/inspector/subtypes/ParameterSubtypes';\nimport CommandIcon from '../icons/components/CommandIcon';\nimport ComponentMapping from './ComponentMapping';\n\nconst CommandMapping: ComponentMapping<CustomCommand> = {\n  type: 'commands',\n  name: {\n    singular: 'Command',\n    plural: 'Commands',\n  },\n  defaults: {\n    name: 'new-command',\n    steps: [],\n  },\n  parameters: componentParametersSubtypes.command,\n  transform: ({ name, ...values }, definitions) => {\n    return parseCustomCommand(name, values, definitions.commands);\n  },\n  store: {\n    get: (state) => state.definitions.commands,\n    add: (actions) => actions.defineCommand,\n    update: (actions) => actions.updateCommand,\n    remove: (actions) => actions.undefineCommand,\n  },\n  components: {\n    icon: CommandIcon,\n    summary: CommandSummary,\n    inspector: CommandInspector,\n  },\n  docsInfo: {\n    description: 'Sequenced steps to be executed',\n    link: 'https://circleci.com/docs/2.0/reusing-config/#the-commands-key',\n  },\n};\n\nexport default CommandMapping;\n","import { IconProps } from '../IconProps';\n\nconst ExecutorIcon = (props: IconProps & { type?: string }) => (\n  <svg viewBox=\"0 0 96 96\" className={props.className}>\n    <g id=\"Layer_1\" data-name=\"Layer 1\">\n      <path d=\"M85.93,30h-76a6,6,0,0,1-6-6V12a6,6,0,0,1,6-6h76a6,6,0,0,1,6,6V24A6,6,0,0,1,85.93,30Zm-76-20a2,2,0,0,0-2,2V24a2,2,0,0,0,2,2h76a2,2,0,0,0,2-2V12a2,2,0,0,0-2-2Z\" />\n      <path d=\"M85.93,90h-76a6,6,0,0,1-6-6V72a6,6,0,0,1,6-6h76a6,6,0,0,1,6,6V84A6,6,0,0,1,85.93,90Zm-76-20a2,2,0,0,0-2,2V84a2,2,0,0,0,2,2h76a2,2,0,0,0,2-2V72a2,2,0,0,0-2-2Z\" />\n      <path d=\"M85.93,60h-76a6,6,0,0,1-6-6V42a6,6,0,0,1,6-6h76a6,6,0,0,1,6,6V54A6,6,0,0,1,85.93,60Zm-76-20a2,2,0,0,0-2,2V54a2,2,0,0,0,2,2h76a2,2,0,0,0,2-2V42a2,2,0,0,0-2-2Z\" />\n      <circle cx=\"19.93\" cy=\"18\" r=\"4\" />\n      <circle cx=\"19.93\" cy=\"48\" r=\"4\" />\n      <circle cx=\"19.93\" cy=\"78\" r=\"4\" />\n      <path d=\"M77.93,20h-48a2,2,0,0,1,0-4h48a2,2,0,0,1,0,4Z\" />\n      <path d=\"M77.93,50h-48a2,2,0,0,1,0-4h48a2,2,0,0,1,0,4Z\" />\n      <path d=\"M77.93,80h-48a2,2,0,0,1,0-4h48a2,2,0,0,1,0,4Z\" />\n    </g>\n  </svg>\n);\n\nexport default ExecutorIcon;\n","import { ReusableExecutor } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Reusable';\nimport ExecutorIcon from '../../../icons/components/ExecutorIcon';\n\nconst ExecutorSummary: React.FunctionComponent<{ data: ReusableExecutor }> = (\n  props,\n) => {\n  return (\n    <div className=\"flex flex-row\">\n      <ExecutorIcon className=\"ml-1 mr-2 w-5 h-5\" /> {props.data.name}\n    </div>\n  );\n};\n\nexport default ExecutorSummary;\n","import { executors } from '@circleci/circleci-config-sdk';\nimport { SubTypeMapping } from '../../../../mappings/ComponentMapping';\nimport InspectorProperty from '../../../atoms/form/InspectorProperty';\n\nexport interface ExecutorSubTypes {\n  [type: string]: SubTypeMapping & {\n    resourceClasses: string[];\n  };\n}\n\nconst executorSubtypes: ExecutorSubTypes = {\n  docker: {\n    text: 'Docker',\n    component: executors.DockerExecutor,\n    resourceClasses: [\n      'small',\n      'medium',\n      'medium+',\n      'large',\n      'xlarge',\n      '2xlarge',\n      '2xlarge+',\n    ],\n    fields: (\n      <InspectorProperty label=\"Image\" name=\"docker[0].image\" required />\n    ),\n    docsLink: 'https://circleci.com/docs/2.0/executor-types/#using-docker',\n    description: 'Steps run in container with provided image',\n  },\n  machine: {\n    text: 'Machine',\n    component: executors.MachineExecutor,\n    resourceClasses: ['medium', 'large', 'xlarge', '2xlarge'],\n    fields: <InspectorProperty label=\"Image\" name=\"machine.image\" required />,\n    docsLink: 'https://circleci.com/docs/2.0/executor-types/#using-machine',\n    description: 'Steps run on Linux Virtual Machine',\n  },\n  macos: {\n    text: 'MacOS',\n    component: executors.MacOSExecutor,\n    resourceClasses: ['medium', 'large'],\n    fields: <InspectorProperty label=\"Xcode\" name=\"macos.xcode\" required />,\n    docsLink: 'https://circleci.com/docs/2.0/executor-types/#using-macos',\n    description:\n      'Steps run on macOS Virtual Machine with specific Xcode version',\n  },\n  windows: {\n    text: 'Windows',\n    component: executors.WindowsExecutor,\n    resourceClasses: ['windows.medium', 'windows.large', 'windows.xlarge', 'windows.2xlarge'],\n    fields: <InspectorProperty label=\"Image\" name=\"machine.image\" required />,\n    docsLink:\n      'https://circleci.com/docs/2.0/executor-types/#using-the-windows-executor',\n    description: 'Steps run on Windows Virtual Machine',\n  },\n};\n\nexport { executorSubtypes };\n","import { FormikValues } from 'formik';\nimport { DefinitionModel } from '../../../state/Store';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport { executorSubtypes } from './subtypes/ExecutorSubtypes';\n\nconst ExecutorInspector = (\n  props: FormikValues & {\n    definitions: DefinitionModel;\n    subtype?: string;\n  },\n) => {\n  if (!props.subtype) {\n    return <div>\n      Something went wrong!\n    </div>;\n  }\n\n  return (\n    <div>\n      <InspectorProperty label=\"Name\" name=\"name\" required />\n      <InspectorProperty\n        label=\"Description\"\n        name={`${props.values.type}.parameters.description`}\n        as=\"textarea\"\n      />\n      <InspectorProperty\n        label=\"Resource Class\"\n        name=\"resource_class\"\n        required\n        as=\"select\"\n      >\n        {executorSubtypes[props.subtype]?.resourceClasses?.map(\n          (resourceClass) => (\n            <option value={resourceClass} key={resourceClass}>\n              {resourceClass}\n            </option>\n          ),\n        )}\n      </InspectorProperty>\n      {executorSubtypes[props.subtype]?.fields}\n      <InspectorProperty\n        label=\"Shell\"\n        name={`${props.values.type}.parameters.shell`}\n      />\n      <InspectorProperty\n        label=\"Working Directory\"\n        name={`${props.values.type}.parameters.working_directory`}\n      />\n    </div>\n  );\n};\n\nexport default ExecutorInspector;\n","export interface CardProps {\n  description?: string;\n  title: string;\n  pinned?: React.ReactElement;\n  onClick: React.MouseEventHandler<HTMLButtonElement>;\n}\n\nconst Card = (props: CardProps) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n      onClick={props.onClick}\n    >\n      <div className=\"flex flex-row\">\n        <p className=\"font-bold\">{props.title}</p>\n        <div className=\"ml-auto z-10\">{props.pinned}</div>\n      </div>\n      <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n        {props.description}\n      </p>\n    </button>\n  );\n};\n\nexport default Card;\n","import ExecutorIcon from '../../../../icons/components/ExecutorIcon';\nimport { NavigationComponent } from '../../../../state/Store';\nimport BreadCrumbs from '../../../containers/BreadCrumbs';\nimport { executorSubtypes } from '../../../containers/inspector/subtypes/ExecutorSubtypes';\nimport { SubTypeSelectPageProps } from '../../SubTypeMenu';\nimport Card from '../../../atoms/Card';\n\nconst ExecutorTypePage = (props: SubTypeSelectPageProps<string>) => {\n  return (\n    <div>\n      <header>\n        <BreadCrumbs />\n        <div className=\"ml-6 flex py-3\">\n          <ExecutorIcon className=\"w-8 h-8 p-1 pl-0 mr-1\"></ExecutorIcon>\n          <h1 className=\"text-2xl font-bold\">New Executor</h1>\n        </div>\n        <div className=\"flex border-b border-circle-gray-300 pl-6\">\n          <div\n            className={`text-sm tracking-wide px-3 py-3 font-bold text-center 'border-black border-b-4 border-black text-circle-black`}\n          >\n            TYPE\n          </div>\n        </div>\n      </header>\n      <div className=\"p-6\">\n        {Object.keys(executorSubtypes).map((subtype) => (\n          <Card\n            key={subtype}\n            description={executorSubtypes[subtype].description}\n            title={executorSubtypes[subtype].text}\n            onClick={() => {\n              props.setSubtype(subtype);\n            }}\n            pinned={\n              <div>\n                {executorSubtypes[subtype].docsLink && (\n                  <a\n                    className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n                    href={executorSubtypes[subtype].docsLink}\n                    target=\"circleci_docs\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                    }}\n                  >\n                    Learn More\n                  </a>\n                )}\n              </div>\n            }\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst ExecutorTypePageNav: NavigationComponent = {\n  Component: ExecutorTypePage,\n  Label: (props: SubTypeSelectPageProps<string>) => <p>New Executor</p>,\n  Icon: (props: SubTypeSelectPageProps<string>) => (\n    <ExecutorIcon className=\"w-6 h-8 py-2\" />\n  ),\n};\n\nexport default ExecutorTypePageNav;\n","import { IconProps } from '../IconProps';\n\nconst JobIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 24 24\" className={props.className}>\n    <path d=\"M12.458388,3 C17.7284428,3 22,7.25487688 22,12.5009275 C22,17.7469783 17.7286827,22 12.458388,22 C9.24779218,22 6.40748266,20.4195905 4.67890641,17.9975161 L4.51046025,18 C5.52650577,18 6.4784703,17.7267799 7.29630887,17.2500927 C8.5797622,18.6332003 10.4175246,19.5 12.4581919,19.5 C16.3422622,19.5 19.4895397,16.3667214 19.4895397,12.5010252 C19.4895397,8.63532901 16.3417423,5.5 12.4581919,5.5 C10.4182181,5.5 8.58077831,6.36686635 7.29682565,7.75083018 C6.52574446,7.30040157 5.63375878,7.03136434 4.68109466,7.00257493 C6.40892952,4.58026814 9.24869152,3 12.458388,3 Z M12.4596333,9.00000001 C14.4011972,9.00000001 15.9748954,10.5675188 15.9748954,12.5003076 C15.9748954,14.4330964 14.4012513,16 12.4596333,16 C11.2973265,16 10.266758,15.437833 9.62706371,14.5716975 C9.88962048,13.931837 10.0334728,13.2326478 10.0334728,12.5 C10.0334728,11.767055 9.88950371,11.0675956 9.62819064,10.4281361 C10.2669454,9.56228031 11.2974499,9.00000001 12.4596333,9.00000001 Z M4.50987191,10 C5.89718507,10 7.0209205,11.1200937 7.0209205,12.5002929 C7.0209205,13.8804921 5.89718507,15 4.50987191,15 C3.12373543,15 2,13.8804921 2,12.5002929 C2,11.1200937 3.12373543,10 4.50987191,10 Z\" />\n  </svg>\n);\n\nexport default JobIcon;\n","import { IconProps } from '../IconProps';\n\nconst PlusIcon = (props: IconProps & { filled: boolean }) => (\n  <svg\n    viewBox={`0 0 ${props.filled ? '20 20' : '16 16'}`}\n    className={props.className}\n  >\n    {props.filled ? (\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11 9V6C11 5.44772 10.5523 5 10 5C9.44771 5 9 5.44772 9 6V9H6C5.44772 9 5 9.44771 5 10C5 10.5523 5.44772 11 6 11H9V14C9 14.5523 9.44771 15 10 15C10.5523 15 11 14.5523 11 14V11H14C14.5523 11 15 10.5523 15 10C15 9.44771 14.5523 9 14 9H11ZM10 0C15.52 0 20 4.48 20 10C20 15.52 15.52 20 10 20C4.48 20 0 15.52 0 10C0 4.48 4.48 0 10 0Z\"\n        fill={props.color}\n      />\n    ) : (\n      <g>\n        <mask\n          id=\"mask0_266_8047\"\n          maskUnits=\"userSpaceOnUse\"\n          x=\"0\"\n          y=\"0\"\n          width=\"16\"\n          height=\"16\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M8.66764 7.33357V5.33357C8.66764 4.96538 8.36916 4.66691 8.00097 4.66691C7.63278 4.66691 7.33431 4.96538 7.33431 5.33357V7.33357H5.33431C4.96612 7.33357 4.66764 7.63205 4.66764 8.00024C4.66764 8.36843 4.96612 8.66691 5.33431 8.66691H7.33431V10.6669C7.33431 11.0351 7.63278 11.3336 8.00097 11.3336C8.36916 11.3336 8.66764 11.0351 8.66764 10.6669V8.66691H10.6676C11.0358 8.66691 11.3343 8.36843 11.3343 8.00024C11.3343 7.63205 11.0358 7.33357 10.6676 7.33357H8.66764ZM8.00065 1.8335C4.59679 1.8335 1.83398 4.59631 1.83398 8.00016C1.83398 11.404 4.59679 14.1668 8.00065 14.1668C11.4045 14.1668 14.1673 11.404 14.1673 8.00016C14.1673 4.59631 11.4045 1.8335 8.00065 1.8335ZM0.833984 8.00016C0.833984 4.04402 4.04451 0.833496 8.00065 0.833496C11.9568 0.833496 15.1673 4.04402 15.1673 8.00016C15.1673 11.9563 11.9568 15.1668 8.00065 15.1668C4.04451 15.1668 0.833984 11.9563 0.833984 8.00016Z\"\n            fill=\"white\"\n          />\n        </mask>\n        <g mask=\"url(#mask0_266_8047)\">\n          <rect width=\"16\" height=\"16\" fill={props.color} />\n        </g>\n      </g>\n    )}\n  </svg>\n);\n\nexport default PlusIcon;\n","import { IconProps } from '../IconProps';\n\nconst WorkflowIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 24 24\" className={props.className} fill={props.color}>\n    <path d=\"M13,12.0005 L13,14.5005 C13,15.8812153 14.1192847,17.0005 15.5,17.0005 C16.7716732,17.0005 17.8215783,16.0510253 17.9794794,14.8223119 C16.8252603,14.4045443 16,13.2985065 16,12.0005 C16,10.3434832 17.3434471,9.0005 19,9.0005 C20.6565529,9.0005 22,10.3434832 22,12.0005 C22,13.3107265 21.1591278,14.4253528 19.9878345,14.8339277 C19.8172144,17.1635097 17.8731367,19.0005 15.5,19.0005 C13.0147153,19.0005 11,16.9857847 11,14.5005 L11,12.0005 L11,9.4995 C11,8.11906389 9.88099443,7.0005 8.5,7.0005 C7.2278041,7.0005 6.17794274,7.94975945 6.020417,9.17853139 C7.17480406,9.5960731 8,10.7018409 8,12.0005 C8,13.6567847 6.65628475,15.0005 5,15.0005 C3.34371525,15.0005 2,13.6567847 2,12.0005 C2,10.6896797 2.84072326,9.57538027 4.01209968,9.16698275 C4.18228055,6.83714058 6.12646259,5.0005 8.5,5.0005 C10.9853872,5.0005 13,7.0143176 13,9.4995 L13,12.0005 Z M6,12.0005 C6,11.4482074 5.55213797,11.0005 5,11.0005 C4.44786203,11.0005 4,11.4482074 4,12.0005 C4,12.5522153 4.44828475,13.0005 5,13.0005 C5.55171525,13.0005 6,12.5522153 6,12.0005 Z M20,12.0005 C20,11.4482074 19.552138,11.0005 19,11.0005 C18.447862,11.0005 18,11.4482074 18,12.0005 C18,12.5522153 18.4482847,13.0005 19,13.0005 C19.5517153,13.0005 20,12.5522153 20,12.0005 Z\"></path>\n  </svg>\n);\n\nexport default WorkflowIcon;\n","import { Job, parseJob, WorkflowJob } from '@circleci/circleci-config-sdk';\nimport JobNode from '../components/atoms/nodes/JobNode';\nimport JobSummary from '../components/atoms/summaries/JobSummary';\nimport JobInspector from '../components/containers/inspector/JobInspector';\nimport { componentParametersSubtypes } from '../components/containers/inspector/subtypes/ParameterSubtypes';\nimport JobIcon from '../icons/components/JobIcon';\nimport ComponentMapping from './ComponentMapping';\n\nconst JobMapping: ComponentMapping<Job, WorkflowJob> = {\n  type: 'jobs',\n  name: {\n    singular: 'Job',\n    plural: 'Jobs',\n  },\n  defaults: {\n    name: 'New Job',\n    steps: [],\n  },\n  parameters: componentParametersSubtypes.job,\n  /**\n   TODO: Implement this to pass transform method to \n   dependsOn: (definitions) => [definitions.commands, definitions.executors],\n   */\n  transform: ({ name, ...values }, definitions) => {\n    return parseJob(name, values, definitions.commands, definitions.executors);\n  },\n  store: {\n    get: (state) => {\n      return state.definitions.jobs;\n    },\n    add: (actions) => actions.defineJob,\n    update: (actions) => actions.updateJob,\n    remove: (actions) => actions.undefineJob,\n  },\n  dragTarget: 'workflow',\n  node: {\n    transform: (data, params) => {\n      return new WorkflowJob(data, params);\n    },\n    component: JobNode,\n  },\n  components: {\n    icon: JobIcon,\n    summary: JobSummary,\n    inspector: JobInspector,\n  },\n  docsInfo: {\n    description: 'Collection of steps to run your config',\n    link: 'https://circleci.com/docs/2.0/concepts/#jobs',\n  },\n};\n\nexport default JobMapping;\n","import { Job, WorkflowJob } from '@circleci/circleci-config-sdk';\nimport { WorkflowJobParameters } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow/types/WorkflowJob.types';\nimport React, { useRef } from 'react';\nimport { Handle, isNode, NodeProps, Position } from 'react-flow-renderer';\nimport JobIcon from '../../../icons/components/JobIcon';\nimport DeleteItemIcon from '../../../icons/ui/DeleteItemIcon';\nimport PlusIcon from '../../../icons/ui/PlusIcon';\nimport JobMapping from '../../../mappings/JobMapping';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\n\nconst JobNode: React.FunctionComponent<NodeProps & { data: WorkflowJob }> = (\n  props,\n) => {\n  const elements = useStoreState(\n    (state) => state.workflows[state.selectedWorkflow].elements,\n  );\n  const dragging = useStoreState((state) => state.dragging);\n  // const setWorkflowElements = useStoreActions(\n  //   (actions) => actions.setWorkflowElements,\n  // );\n  const updateJob = useStoreActions((actions) => actions.updateJob);\n  const setConnecting = useStoreActions((actions) => actions.setConnecting);\n  const removeWorkflowElement = useStoreActions((actions) => actions.removeWorkflowElement);\n  \n  const connecting = useStoreState((state) => state.connecting);\n  const updateConnecting = useStoreActions(\n    (actions) => actions.updateConnecting,\n  );\n\n  const updateWorkflowJob = (\n    workflowJob: WorkflowJob,\n    applyToData: { job?: Job; parameters?: WorkflowJobParameters },\n  ) =>\n    elements.map((element) =>\n      isNode(element) && element.data.job.name === workflowJob.job.name\n        ? { ...element, data: { ...workflowJob, ...applyToData } }\n        : element,\n    );\n  const [hovering, setHovering] = React.useState({\n    handles: false,\n    node: false,\n    requiredBy: false,\n    remove: false,\n    requires: false,\n  });\n\n  const trackHovering = (\n    entering: string[],\n    leaving: string[],\n    postEnter?: () => void,\n    postLeave?: () => void,\n  ) => {\n    return {\n      onMouseEnter: () => {\n        setHovering(\n          entering.reduce(\n            (previous, n) => ({ ...previous, [n]: true }),\n            hovering,\n          ),\n        );\n        postEnter && postEnter();\n      },\n      onMouseLeave: () => {\n        setHovering(\n          leaving.reduce(\n            (previous, n) => ({ ...previous, [n]: false }),\n            hovering,\n          ),\n        );\n        postLeave && postLeave();\n      },\n    };\n  };\n\n  const nodeRef = useRef(null);\n\n  return (\n    <div\n      className={`p-8 flex flex-row cursor-default`}\n      {...trackHovering(\n        ['handles'],\n        ['handles', 'node', 'requires', 'requiredBy'],\n        () => {\n          updateConnecting({\n            ref: nodeRef,\n            id: {\n              connectionNodeId: props.id,\n              connectionHandleType: 'target',\n              connectionHandleId: `${props.id}_target`,\n            },\n            name: props.data.parameters?.name || props.data.job.name,\n          });\n        },\n        () => {\n          updateConnecting(undefined);\n        },\n      )}\n      onDragOver={(e) => {\n        if (dragging && dragging.dataType?.dragTarget === JobMapping.type) {\n          e.preventDefault();\n        }\n      }}\n      onDrop={(e) => {\n        if (\n          dragging &&\n          dragging.dataType?.dragTarget === JobMapping.type &&\n          dragging.dataType.applyToNode\n        ) {\n          const applyToData = dragging.dataType.applyToNode(\n            dragging.data,\n            props.data,\n          );\n\n          if (JobMapping.type in applyToData) {\n            updateJob({ old: props.data.job, new: applyToData.job });\n          }\n\n          if ('parameters' in applyToData) {\n            updateWorkflowJob(props.data, applyToData);\n          }\n        }\n      }}\n    >\n      <button\n        className={`opacity-${\n          hovering['handles'] && !hovering['node'] && !connecting?.start\n            ? 100\n            : 0\n        } transition-opacity duration-300 w-4 h-4 my-auto mr-5`}\n        id={`${props.id}_source`}\n        {...trackHovering(['requires', 'handles'], ['requires'])}\n      >\n        <PlusIcon\n          filled={hovering['requires']}\n          color=\"rgb(0, 120, 202)\"\n          className=\"bg-white rounded-full w-full border border-white\"\n        />\n      </button>\n\n      <button\n        className={`p-2 bg-white node flex flex-row text-black rounded-md border cursor-pointer \n        ${\n          (hovering['node'] && !hovering['remove']) ||\n          (hovering['handles'] && connecting?.start)\n            ? 'border-circle-blue'\n            : 'border-circle-gray-300'\n        }`}\n        ref={nodeRef}\n        {...trackHovering(['node'], ['node'])}\n      >\n        <div className=\"flex w-full\">\n          <JobIcon className=\"w-5 mr-2\" />\n          {props.data.parameters?.name || props.data.job.name}\n        </div>\n        <button\n          className={`my-auto\n          opacity-${hovering['node'] ? 100 : 0} \n          transition-opacity duration-150 w-8 h-full flex`}\n          {...trackHovering(['remove'], ['remove'])}\n          onClick={() => {\n            removeWorkflowElement(props.id);\n          }}\n        >\n          <DeleteItemIcon\n            className=\"w-3 cursor-pointer m-auto\"\n            color={hovering['remove'] ? 'red' : '#AAAAAA'}\n          />\n        </button>\n      </button>\n\n      <button\n        className={`opacity-${\n          hovering['handles'] && !hovering['node'] && !connecting?.start\n            ? 100\n            : 0\n        } source transition-opacity duration-300 w-4 h-4 my-auto ml-5`}\n        {...trackHovering(['requiredBy', 'handles'], ['requiredBy'])}\n        id={`${props.id}_target`}\n        // onClick={() => {\n        // TODO: Implement 'add job' menu functionality\n        // }}\n        draggable\n        onDragStart={(e) => {\n          setConnecting({\n            ref: nodeRef,\n            id: {\n              connectionNodeId: props.id,\n              connectionHandleType: 'source',\n              connectionHandleId: `${props.id}_source`,\n            },\n            name: props.data.parameters?.name || props.data.job.name,\n          });\n          e.preventDefault();\n        }}\n      >\n        <PlusIcon\n          className=\"bg-white rounded-full w-full border border-white\"\n          color=\"rgb(0, 120, 202)\"\n          filled={hovering['requiredBy']}\n        />\n      </button>\n\n      <Handle\n        type=\"source\"\n        className=\"opacity-0 cursor-default\"\n        position={Position.Right}\n        id={`${props.id}_source`}\n      ></Handle>\n      <Handle\n        className=\"opacity-0 cursor-default\"\n        id={`${props.id}_target`}\n        type=\"target\"\n        position={Position.Left}\n      />\n    </div>\n  );\n};\n\nexport default JobNode;\n","import { Job } from '@circleci/circleci-config-sdk';\nimport JobIcon from '../../../icons/components/JobIcon';\nimport WorkflowIcon from '../../../icons/components/WorkflowIcon';\n\nconst JobSummary: React.FunctionComponent<{ data: Job }> = (props) => {\n  return (\n    <div className=\"flex flex-row\">\n      <JobIcon className=\"ml-1 mr-2 w-5 h-5\"/>\n      <p className=\"leading-5\">{props.data.name}</p>\n      <WorkflowIcon className=\"w-5 h-5 ml-auto\" color=\"#E3E3E3\" />\n    </div>\n  );\n};\n\nexport default JobSummary;\n","import { FormikValues } from 'formik';\nimport JobMapping from '../../../mappings/JobMapping';\nimport { useStoreActions } from '../../../state/Hooks';\nimport { DefinitionModel } from '../../../state/Store';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport ListProperty from '../../atoms/form/ListProperty';\nimport StepPropertiesMenu from '../../menus/definitions/StepDefinitionMenu';\nimport StepTypePage from '../../menus/definitions/subtypes/StepTypePage';\nimport SubTypeMenuNav from '../../menus/SubTypeMenu';\n\nconst JobInspector = (\n  props: FormikValues & { definitions: DefinitionModel },\n) => {\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n\n  return (\n    <div>\n      <InspectorProperty label=\"Name\" name=\"name\" required />\n      <InspectorProperty\n        label=\"Executor\"\n        as=\"select\"\n        name=\"executor.name\"\n        required\n      >\n        {[{ name: 'Select Executor' }, ...props.definitions.executors].map(\n          (executor) => (\n            <option value={executor.name} key={executor.name}>\n              {executor.name}\n            </option>\n          ),\n        )}\n      </InspectorProperty>\n      <ListProperty\n        label=\"Steps\"\n        name=\"steps\"\n        values={props.values.steps}\n        expanded\n        emptyText=\"No steps defined yet.\"\n        titleExpanded={\n          <button\n            type=\"button\"\n            onClick={() => {\n              navigateTo({\n                component: SubTypeMenuNav,\n                props: {\n                  typePage: StepTypePage,\n                  menuPage: StepPropertiesMenu,\n                  passThrough: { dataType: JobMapping },\n                },\n                values: props.values,\n              });\n            }}\n            className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n          >\n            New\n          </button>\n        }\n      ></ListProperty>\n    </div>\n  );\n};\n\nexport default JobInspector;\n","import {\n  executors,\n  Job,\n  parseExecutor,\n  reusable,\n  WorkflowJob,\n} from '@circleci/circleci-config-sdk';\nimport ExecutorSummary from '../components/atoms/summaries/ExecutorSummary';\nimport ExecutorInspector from '../components/containers/inspector/ExecutorInspector';\nimport { executorSubtypes } from '../components/containers/inspector/subtypes/ExecutorSubtypes';\nimport { componentParametersSubtypes } from '../components/containers/inspector/subtypes/ParameterSubtypes';\nimport ExecutorTypePageNav from '../components/menus/definitions/subtypes/ExecutorTypePage';\nimport ExecutorIcon from '../icons/components/ExecutorIcon';\nimport ComponentMapping from './ComponentMapping';\nimport JobMapping from './JobMapping';\n\nexport type AnyExecutor =\n  | executors.DockerExecutor\n  | executors.MacOSExecutor\n  | executors.MachineExecutor\n  | executors.WindowsExecutor\n  | executors.Executor;\n\nconst ExecutorMapping: ComponentMapping<\n  reusable.ReusableExecutor,\n  WorkflowJob\n> = {\n  type: 'executors',\n  name: {\n    singular: 'Executor',\n    plural: 'Executors',\n  },\n  defaults: {\n    docker: {\n      name: 'new-docker-executor',\n      docker: [\n        {\n          image: 'cimg/base:stable',\n          parameters: {},\n        },\n      ],\n      resource_class: 'medium',\n    },\n    machine: {\n      name: 'new-machine-executor',\n      machine: {\n        image: 'ubuntu-2004:202111-01',\n        parameters: {},\n      },\n      resource_class: 'medium',\n    },\n    macos: {\n      name: 'new-macos-executor',\n      macos: {\n        xcode: '13.2.0',\n        parameters: {},\n      },\n      resource_class: 'medium',\n    },\n    windows: {\n      name: 'new-windows-executor',\n      machine: {\n        image: 'windows-server-2019-vs2019:stable',\n        parameters: {},\n      },\n      resource_class: 'windows.medium',\n    },\n  },\n  parameters: componentParametersSubtypes.executor,\n  transform: ({ name, ...values }) => {\n    return new reusable.ReusableExecutor(\n      name,\n      parseExecutor(values) as executors.Executor,\n    );\n  },\n  store: {\n    get: (state) => state.definitions.executors,\n    add: (actions) => actions.defineExecutor,\n    update: (actions) => actions.updateExecutor,\n    remove: (actions) => actions.undefineExecutor,\n  },\n  dragTarget: JobMapping.type,\n  applyToNode: (data, nodeData) => {\n    const oldJob = nodeData.job;\n\n    return new WorkflowJob(\n      new Job(oldJob.name, data, oldJob.steps),\n      nodeData.parameters,\n    );\n  },\n  subtypes: {\n    component: ExecutorTypePageNav,\n    getSubtype: (reusableExec) => {\n      const reusableExecsKeys = Object.keys(reusableExec);\n\n      return Object.keys(executorSubtypes).find((subtype) =>\n        reusableExecsKeys.includes(subtype),\n      );\n    },\n    definitions: executorSubtypes,\n  },\n  components: {\n    icon: ExecutorIcon,\n    summary: ExecutorSummary,\n    inspector: ExecutorInspector,\n  },\n  docsInfo: {\n    description: 'Technology/Environment to run with',\n    link: 'https://circleci.com/docs/2.0/executor-types/',\n  },\n};\n\nexport default ExecutorMapping;\n","import { IconProps } from '../IconProps';\n\nconst ParameterIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 18 18\" className={props.className}>\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4.649 3.084A1 1 0 015.163 4.4 13.95 13.95 0 004 10c0 1.993.416 3.886 1.164 5.6a1 1 0 01-1.832.8A15.95 15.95 0 012 10c0-2.274.475-4.44 1.332-6.4a1 1 0 011.317-.516zM12.96 7a3 3 0 00-2.342 1.126l-.328.41-.111-.279A2 2 0 008.323 7H8a1 1 0 000 2h.323l.532 1.33-1.035 1.295a1 1 0 01-.781.375H7a1 1 0 100 2h.039a3 3 0 002.342-1.126l.328-.41.111.279A2 2 0 0011.677 14H12a1 1 0 100-2h-.323l-.532-1.33 1.035-1.295A1 1 0 0112.961 9H13a1 1 0 100-2h-.039zm1.874-2.6a1 1 0 011.833-.8A15.95 15.95 0 0118 10c0 2.274-.475 4.44-1.332 6.4a1 1 0 11-1.832-.8A13.949 13.949 0 0016 10c0-1.993-.416-3.886-1.165-5.6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>\n);\n\nexport default ParameterIcon;\n","import { parseParameter } from '@circleci/circleci-config-sdk';\nimport { CustomParameter } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters';\nimport { PipelineParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport ParameterSummary from '../components/atoms/summaries/ParameterSummary';\nimport ParameterInspector from '../components/containers/inspector/ParameterInspector';\nimport { parameterSubtypes } from '../components/containers/inspector/subtypes/ParameterSubtypes';\nimport ParameterTypePageNav from '../components/menus/definitions/subtypes/ParameterTypePage';\nimport ParameterIcon from '../icons/components/ParameterIcon';\nimport ComponentMapping from './ComponentMapping';\n\nconst ParameterMapping: ComponentMapping<\n  CustomParameter<PipelineParameterLiteral>\n> = {\n  type: 'parameters',\n  name: {\n    singular: 'Parameter',\n    plural: 'Parameters',\n  },\n  defaults: {\n    integer: {\n      name: 'new_integer_parameter',\n    },\n    boolean: {\n      name: 'new_boolean_parameter',\n    },\n    string: {\n      name: 'new_string_parameter',\n    },\n    enum: {\n      name: 'new_enum_parameter',\n    },\n  },\n  transform: ({ name, ...values }) => {\n    return parseParameter(\n      values,\n      name,\n    ) as CustomParameter<PipelineParameterLiteral>;\n  },\n  store: {\n    get: (state) => state.definitions.parameters,\n    add: (actions) => actions.defineParameter,\n    update: (actions) => actions.updateParameter,\n    remove: (actions) => actions.undefineParameter,\n  },\n  subtypes: {\n    component: ParameterTypePageNav,\n    getSubtype: (parameter) => parameter.type,\n    definitions: parameterSubtypes,\n  },\n  components: {\n    icon: ParameterIcon,\n    summary: ParameterSummary,\n    inspector: ParameterInspector,\n  },\n  docsInfo: {\n    description: 'Options to help describe a job, command, or executor',\n    link: 'https://circleci.com/docs/2.0/reusing-config/#using-the-parameters-declaration',\n  },\n};\n\nexport default ParameterMapping;\n","import ParameterIcon from '../../../../icons/components/ParameterIcon';\nimport ComponentMapping from '../../../../mappings/ComponentMapping';\nimport { NavigationComponent } from '../../../../state/Store';\nimport BreadCrumbs from '../../../containers/BreadCrumbs';\nimport {\n  componentParametersSubtypes,\n  parameterSubtypes,\n} from '../../../containers/inspector/subtypes/ParameterSubtypes';\nimport { SubTypeSelectPageProps } from '../../SubTypeMenu';\n\nconst ParameterTypePage = (\n  props: SubTypeSelectPageProps<string> & { component: ComponentMapping },\n) => {\n  const parameters =\n    props.component?.parameters || componentParametersSubtypes.pipeline;\n\n  return (\n    <div>\n      <header>\n        {/* <WorkflowIcon className=\"w-6 h-6 mr-1\" color=\"#6A6A6A\" /> */}\n        <BreadCrumbs />\n        <div className=\"ml-6 flex py-3\">\n          <ParameterIcon className=\"w-8 h-8 p-1 pl-0 mr-1\"></ParameterIcon>\n          <h1 className=\"text-2xl font-bold\">New Parameter</h1>\n        </div>\n        <div className=\"flex border-b border-circle-gray-300 pl-6\">\n          <div\n            className={`text-sm tracking-wide px-3 py-3 font-bold text-center 'border-black border-b-4 border-black text-circle-black`}\n          >\n            TYPE\n          </div>\n        </div>\n      </header>\n      <div className=\"p-6\">\n        {parameters?.types &&\n          parameters.types.map((subtype: any) => (\n            <button\n              key={subtype}\n              type=\"button\"\n              className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n              onClick={() => {\n                props.setSubtype(subtype);\n              }}\n            >\n              <p className=\"font-bold\">{parameterSubtypes[subtype]?.text}</p>\n              <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                {parameterSubtypes[subtype]?.description}\n              </p>\n            </button>\n            // <InspectorProperty name={command} label={commandProps[command].text} as=\"card\" />\n          ))}\n      </div>\n    </div>\n  );\n};\n\nconst ParameterTypePageNav: NavigationComponent = {\n  Component: ParameterTypePage,\n  Label: (props: SubTypeSelectPageProps<string>) => <p>New Parameter</p>,\n  Icon: (props: SubTypeSelectPageProps<string>) => (\n    <ParameterIcon className=\"w-6 h-8 py-2\" />\n  ),\n};\n\nexport default ParameterTypePageNav;\n","import { CustomParameter } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters';\nimport { PipelineParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport ParameterIcon from '../../../icons/components/ParameterIcon';\n\nconst ParameterSummary: React.FunctionComponent<{\n  data: CustomParameter<PipelineParameterLiteral>;\n}> = (props) => {\n  return (\n    <div className=\"flex flex-row\">\n      <ParameterIcon className=\"ml-1 mr-2 w-5 h-5\" /> {props.data.name}\n    </div>\n  );\n};\n\nexport default ParameterSummary;\n","import { FormikValues } from 'formik';\nimport { DefinitionModel } from '../../../state/Store';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport { parameterSubtypes } from './subtypes/ParameterSubtypes';\n// data: CustomParameter<PrimitiveParameterLiteral>\nconst ParameterInspector = (\n  props: FormikValues & {\n    definitions: DefinitionModel;\n  },\n) => {\n  return (\n    <div>\n      <InspectorProperty name=\"name\" label=\"Name\" required />\n      <InspectorProperty name=\"description\" label=\"Description\" />\n      {parameterSubtypes[props.values.type]?.fields}\n    </div>\n  );\n};\n\nexport default ParameterInspector;\n","import {\n  executors,\n  Job,\n  parameters,\n  reusable,\n} from '@circleci/circleci-config-sdk';\nimport { ActionCreator, Actions, State } from 'easy-peasy';\nimport { FormikValues } from 'formik';\nimport { ReactElement } from 'react';\nimport { NodeProps } from 'react-flow-renderer';\nimport Store, {\n  DefinitionModel,\n  NavigationComponent,\n  UpdateType,\n} from '../state/Store';\nimport CommandMapping from './CommandMapping';\nimport ExecutorMapping from './ExecutorMapping';\nimport JobMapping from './JobMapping';\nimport ParameterMapping from './ParameterMapping';\n\n/**\n * Interface to add a circleci-config-sdk component to a data mapping.\n */\nexport interface DataMapping {\n  type: string;\n  component: any[];\n  mapping: GenerableMapping;\n}\n\n/**\n * Registry of circleci-config-sdk component to data maps.\n */\n\n// Maybe add docs link to Executor and description as a key to each Mapping\nconst dataMappings: DataMapping[] = [\n  {\n    type: 'executors',\n    component: [\n      executors.DockerExecutor,\n      executors.MacOSExecutor,\n      executors.MachineExecutor,\n      executors.WindowsExecutor,\n    ],\n    mapping: ExecutorMapping,\n  },\n  {\n    type: 'jobs',\n    component: [Job],\n    mapping: JobMapping,\n  },\n  {\n    type: 'commands',\n    component: [reusable.CustomCommand],\n    mapping: CommandMapping,\n  },\n  {\n    type: 'parameters',\n    component: [parameters.CustomParameter],\n    mapping: ParameterMapping,\n  },\n];\n\n/**\n * Utility function for converting a component into a mapping type.\n * @param {any} data:any\n * @returns {any}\n */\nconst componentToType = (data: any): GenerableMapping | undefined => {\n  let foundType = undefined;\n\n  dataMappings.forEach((mapping) => {\n    if (typeof data === 'string' && mapping.type === data) {\n      foundType = mapping.mapping;\n      return;\n    } else {\n      mapping.component.forEach((type) => {\n        if (data instanceof type) {\n          foundType = mapping.mapping;\n          return;\n        }\n      });\n    }\n  });\n\n  return foundType;\n};\n\nexport { componentToType, dataMappings };\n\ntype StoreType = typeof Store;\ntype KeysOfUnion<T> = T extends T ? keyof T : never;\n\nexport interface SubTypeMapping {\n  text: string;\n  description?: string;\n  docsLink?: string;\n  component?: any;\n  fields: ReactElement | React.FunctionComponent<any>;\n}\n\nexport interface GenerableInfoType {\n  description: string;\n  link: string;\n}\n\n/**\n * circleci-config-sdk Generable to Data Mapping\n *\n * @interface\n */\nexport default interface GenerableMapping<\n  ConfigDataType = any,\n  ConfigNodeProps = any,\n  InspectorDefaults = any,\n> {\n  guide?: { info: string; step: number };\n  /**  String name type of component. Must be equal to index within registry. */\n  type: string;\n  /**  Language values of component. This should be used for UI display only. */\n  name: {\n    singular: string;\n    plural: string;\n  };\n  /** Default values to populate inspectors\n   *  @todo need to add support for subtype defaults\n   */\n  defaults: {\n    [K in KeysOfUnion<ConfigDataType | InspectorDefaults>]?: any;\n  };\n  /**\n   * Is true when the component can accept parameters.\n   */\n  parameters?: any;\n  docsInfo: GenerableInfoType;\n  /** Transform field values into an instance of ConfigDataType */\n  transform: (\n    values: { [K: string]: any },\n    definitions: DefinitionModel,\n  ) => ConfigDataType | undefined;\n  store: {\n    /** Returns easy-peasy state hook for component array */\n    get: (state: State<StoreType>) => ConfigDataType[] | undefined;\n    /** Returns easy-peasy add action hook for component array */\n    add: (state: Actions<StoreType>) => ActionCreator<ConfigDataType>;\n    /** Returns easy-peasy update action hook for data type */\n    update: (\n      state: Actions<StoreType>,\n    ) => (data: UpdateType<ConfigDataType>) => void;\n    /** Returns easy-peasy removal action hook for data type */\n    remove: (state: Actions<StoreType>) => (data: ConfigDataType) => void;\n  };\n  /**\n   * Name of target that a definition can be tragged to.\n   * Currently only 'workflow' or 'job'\n   */\n  dragTarget?: string;\n  /**\n   * Called from a node to apply datatype to the applied node\n   * @todo Potentially support multiple node types.\n   * @returns Object populated with values of ConfigNodeProps */\n  applyToNode?: (\n    data: ConfigDataType,\n    nodeData: ConfigNodeProps,\n  ) => { [K in KeysOfUnion<ConfigNodeProps>]?: any };\n  node?: {\n    /** Transform definition data */\n    transform?: (data: ConfigDataType, extras?: any) => ConfigNodeProps;\n    /** @todo: Add store functionality to better support updating defintions and their corresponding workflow nodes */\n    component: React.FunctionComponent<{ data: ConfigNodeProps } & NodeProps>;\n  };\n  subtypes?: {\n    component: NavigationComponent;\n    getSubtype: (data: ConfigDataType) => string | undefined;\n    definitions: { [subtype: string]: SubTypeMapping };\n  };\n  components: {\n    /** Icon Generable to render in definition */\n    icon?: React.FunctionComponent<any>;\n    /** Generable to render in definition */\n    summary: React.FunctionComponent<{ data: ConfigDataType }>;\n    /**\n     * Called by InspectorPane and CreateNew to generate form\n     * @returns Function which returns a Formik Form object*/\n    inspector: (\n      props: FormikValues & {\n        definitions: DefinitionModel;\n        subtype?: string;\n      },\n      // data: ConfigDataType;\n    ) => JSX.Element;\n  };\n}\n","import {\n  ConnectionLineComponentProps,\n  useStoreState as flowState,\n} from 'react-flow-renderer';\nimport { useStoreState } from '../../state/Hooks';\n\nconst ConnectionLine = ({\n  sourceX,\n  sourceY,\n  sourcePosition,\n  targetX,\n  targetY,\n  targetPosition,\n  connectionLineType,\n  connectionLineStyle,\n}: ConnectionLineComponentProps) => {\n  const connecting = useStoreState((state) => state.connecting);\n  const transform = flowState((state: any) => state.transform);\n  const handle = connecting?.start?.ref?.current as Element;\n\n  if (!handle) {\n    return null;\n  }\n\n  const bounds = handle.getBoundingClientRect();\n  const startX = (bounds.x + bounds.width - transform[0]) / transform[2];\n  const startY =\n    (bounds.y + bounds.height / 2 - 64 - transform[1]) / transform[2];\n  let endX = targetX;\n  let endY = targetY;\n  const dist = 30;\n  const invalid = endX - dist < startX + dist;\n  let color = '#76CDFF';\n\n  if (!invalid && connecting?.end?.ref) {\n    const snapTo = connecting?.end.ref?.current as Element;\n\n    if (snapTo && connecting?.end?.ref.current !== handle) {\n      const snapToBounds = snapTo.getBoundingClientRect();\n      endX = (snapToBounds.x - transform[0]) / transform[2];\n      endY =\n        (snapToBounds.y + snapToBounds.height / 2 - 64 - transform[1]) /\n        transform[2];\n      color = '#0078CA';\n    }\n  }\n\n  color = invalid ? '#F24646' : color;\n\n  return (\n    <g>\n      <path\n        fill=\"none\"\n        stroke={color}\n        strokeWidth={1.5}\n        className=\"animated\"\n        d={`M${startX},${startY} ${startX + dist},${startY} ${startX + dist},${startY} ${endX - dist},${endY} ${endX - dist},${endY} ${endX},${endY}`}\n      />\n      <circle\n        cx={endX}\n        cy={endY}\n        fill=\"#fff\"\n        r={3}\n        stroke={color}\n        strokeWidth={1.5}\n      />\n      <circle\n        cx={startX - 2}\n        cy={startY}\n        fill=\"#fff\"\n        r={3}\n        stroke={color}\n        strokeWidth={1.5}\n      />\n    </g>\n  );\n};\n\nexport default ConnectionLine;\n","import React from 'react';\nimport { EdgeProps } from 'react-flow-renderer';\n\nexport default function Edge({\n  id,\n  sourceX,\n  sourceY,\n  targetX,\n  targetY,\n  sourcePosition,\n  targetPosition,\n  style = {},\n  data,\n  arrowHeadType,\n  markerEndId,\n}: EdgeProps) {\n  const gap = 45;\n\n  return (\n    <g>\n      <path\n        id={id}\n        style={style}\n        className=\"react-flow__edge-path\"\n        d={`M${sourceX - gap * 2},${sourceY} ${sourceX - gap},${sourceY} ${\n          sourceX - gap\n        },${sourceY} ${targetX + gap},${targetY} ${targetX + gap},${targetY} ${\n          targetX + gap * 2\n        },${targetY}`}\n      />\n      {/* <text>\n        <textPath\n          href={`#${id}`}\n          style={{ fontSize: '12px' }}\n          startOffset=\"50%\"\n          textAnchor=\"middle\"\n        >\n          {'requires'}\n        </textPath>\n      </text> */}\n    </g>\n  );\n}\n","import { WorkflowJobParameters } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Workflow/types/WorkflowJob.types';\nimport { useEffect, useState } from 'react';\nimport ReactFlow, {\n  addEdge,\n  Background,\n  BackgroundVariant,\n  ConnectionLineComponentProps,\n  ConnectionMode,\n  FlowTransform,\n  isNode,\n  Node,\n  NodeTypesType,\n  useStoreActions as flowActions,\n} from 'react-flow-renderer';\nimport { v4 } from 'uuid';\nimport { dataMappings } from '../../mappings/ComponentMapping';\nimport JobMapping from '../../mappings/JobMapping';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport { WorkflowModel } from '../../state/Store';\nimport ConnectionLine from '../atoms/ConnectionLine';\nimport Edge from '../atoms/Edge';\n\nexport interface ElementProps {\n  className?: string;\n  bgClassName?: string;\n  workflow: WorkflowModel;\n}\n\nconst getTypes = (): NodeTypesType =>\n  Object.assign(\n    {},\n    ...dataMappings.map((component) =>\n      component.mapping.node\n        ? { [component.mapping.type]: component.mapping.node.component }\n        : null,\n    ),\n  );\n\nconst WorkflowPane = (props: ElementProps) => {\n  const [transform, setTransform] = useState<FlowTransform>({\n    x: 0,\n    y: 0,\n    zoom: 1,\n  });\n\n  const elements = useStoreState(\n    (state) => state.workflows[state.selectedWorkflow].elements,\n  );\n  const addWorkflowElement = useStoreActions(\n    (actions) => actions.addWorkflowElement,\n  );\n\n  const dragging = useStoreState((state) => state.dragging);\n  const connecting = useStoreState((state) => state.connecting);\n  const setWorkflowElements = useStoreActions(\n    (actions) => actions.setWorkflowElements,\n  );\n  const setConnecting = useStoreActions((actions) => actions.setConnecting);\n  const [connectingTo, setConnectingTo] = useState({ x: 0, y: 0 });\n\n  const updateWorkflowJob = (\n    targetJob: string,\n    applyToData: (parameters: WorkflowJobParameters) => WorkflowJobParameters,\n  ) =>\n    elements.map((element) => {\n      return isNode(element) &&\n        JobMapping.node?.transform &&\n        (element.data.parameters?.name || element.data.job.name) === targetJob\n        ? {\n            ...element,\n            data: JobMapping.node.transform(\n              element.data.job,\n              applyToData(element.data.parameters),\n            ),\n          }\n        : element;\n    });\n\n  const handleMouseUp = () => {\n    if (connecting?.start?.name) {\n      const startName = connecting.start.name;\n\n      if (connecting?.end?.name) {\n        setWorkflowElements(\n          addEdge(\n            {\n              source: connecting.start.id.connectionNodeId,\n              target: connecting.end.id.connectionNodeId,\n              type: 'requires',\n              sourceHandle: connecting.start.id.connectionHandleId,\n              targetHandle: connecting.end.id.connectionNodeId,\n              animated: false,\n              style: { stroke: '#A3A3A3', strokeWidth: '2px' },\n            },\n            updateWorkflowJob(connecting.end.name, (parameters) => ({\n              requires: parameters?.requires\n                ? [...parameters.requires, startName]\n                : [startName],\n            })),\n          ),\n        );\n      }\n\n      setConnecting({\n        id: {\n          connectionNodeId: null,\n          connectionHandleType: null,\n          connectionHandleId: null,\n        },\n      });\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('mouseup', handleMouseUp);\n\n    return () => {\n      window.removeEventListener('mouseup', handleMouseUp);\n    };\n  });\n\n  const gap = 15;\n\n  const NodesDebugger = () => {\n    // const asdsa = flowState((state) => state.connectionPosition);\n    const setConnecting = flowActions((state) => state.setConnectionNodeId);\n    const setConnectingPosition = flowActions(\n      (state) => state.setConnectionPosition,\n    );\n\n    useEffect(() => {\n      setConnecting(connecting?.start?.id);\n      setConnectingPosition({\n        x: connectingTo.x - transform.x,\n        y: connectingTo.y - transform.y,\n      });\n    });\n\n    return null;\n  };\n\n  return (\n    <div\n      className=\"w-full h-full\"\n      onDragOver={(e) => {\n        if (dragging?.dataType?.dragTarget === 'workflow') {\n          e.preventDefault();\n        }\n      }}\n      onDrag={(e) => {}}\n      onMouseMove={(e) => {\n        const containerBounds = (e.target as Element)\n          .closest('.react-flow')\n          ?.getBoundingClientRect();\n\n        if (containerBounds) {\n          setConnectingTo({\n            x: e.clientX + transform.x - containerBounds.left,\n            y: e.clientY + transform.y - containerBounds.top,\n          });\n        }\n      }}\n      onDrop={(e) => {\n        const nodeMapping = dragging?.dataType?.node;\n\n        if (dragging?.dataType?.dragTarget === 'workflow' && nodeMapping) {\n          const pos = {\n            x: e.clientX - gap - transform.x,\n            y: e.clientY - gap * 3 - transform.y,\n          };\n          const round = (val: number) =>\n            Math.floor(val / transform.zoom / gap) * gap;\n          let data = dragging.data;\n\n          if (nodeMapping.transform) {\n            data = nodeMapping.transform(data);\n          }\n\n          const workflowNode: Node<any> = {\n            id: v4(),\n            data,\n            connectable: true,\n            dragHandle: '.node',\n            type: dragging.dataType.type,\n            position: { x: round(pos.x), y: round(pos.y) },\n          };\n\n          addWorkflowElement(workflowNode);\n        }\n      }}\n    >\n      <ReactFlow\n        elements={elements}\n        className={props.className}\n        onMove={(e) => {\n          setTransform(e || transform);\n        }}\n        selectNodesOnDrag={false}\n        nodeTypes={getTypes()}\n        edgeTypes={{ requires: Edge }}\n        snapToGrid={true}\n        connectionMode={ConnectionMode.Loose}\n        connectionLineComponent={\n          ConnectionLine as React.ComponentType<ConnectionLineComponentProps>\n        }\n      >\n        <NodesDebugger />\n        <Background\n          variant={BackgroundVariant.Dots}\n          gap={gap}\n          color=\"#A3A3A3\"\n          className={props.bgClassName}\n          size={1}\n        />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default WorkflowPane;\n","import { useStoreActions, useStoreState } from '../../state/Hooks';\nimport WorkflowPane from '../containers/WorkflowContainer';\n\nconst WorkflowsPane = () => {\n  const workflows = useStoreState((state) => state.workflows);\n  const selectedWorkflow = useStoreState((state) => state.selectedWorkflow);\n  const selectWorkflow = useStoreActions((actions) => actions.selectWorkflow);\n\n  return (\n    <div className=\"flex flex-col flex-nowrap flex-1\">\n      <div className=\"w-full bg-white h-16 p-5\">\n        <select className=\"rounded border border-circle-gray-400 p-2\">\n          {workflows.map((workflow, num) => (\n            <option value={workflow.id} key={workflow.id}  onChange={() => selectWorkflow(num)}>\n              {workflow.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      <WorkflowPane\n        workflow={workflows[selectedWorkflow]}\n        bgClassName=\"bg-circle-gray-200\"\n        className=\"border border-r-0 h-full border-b-0 border-circle-gray-300\"\n      />\n      \n    </div>\n  );\n};\n\nexport default WorkflowsPane;\n","import ComponentMapping from '../../mappings/ComponentMapping';\n\nconst ComponentInfo = (props: { type: ComponentMapping }) => {\n  return (\n    <div className=\"pb-4\">\n      <p className=\"font-medium text-sm text-circle-gray-500\">\n        {props.type.docsInfo.description}\n      </p>\n      <a\n        className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n        href={props.type.docsInfo.link}\n        target=\"circleci_docs\"\n      >\n        Learn More\n      </a>\n    </div>\n  );\n};\n\nexport default ComponentInfo;\n","import { FieldArray, useField } from 'formik';\nimport ComponentMapping from '../../mappings/ComponentMapping';\nimport ParameterMapping from '../../mappings/ParameterMapping';\nimport { useStoreActions } from '../../state/Hooks';\nimport { InspectorDefinitionMenu } from '../menus/definitions/InspectorDefinitionMenu';\nimport SubTypeMenuNav from '../menus/SubTypeMenu';\n\nconst ParameterContainer = (props: {\n  dataMapping: ComponentMapping;\n  values: any;\n}) => {\n  const [field] = useField(props.values.parameters);\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n\n  return (\n    <FieldArray\n      {...field}\n      name=\"parameters\"\n      render={(arrayHelpers) => (\n        <div className=\"p-6 flex flex-col\">\n          <button\n            type=\"button\"\n            onClick={() => {\n              navigateTo({\n                component: SubTypeMenuNav,\n                props: {\n                  typePage: ParameterMapping.subtypes?.component,\n                  typeProps: { component: props.dataMapping },\n                  menuPage: InspectorDefinitionMenu,\n                  menuProps: {\n                    dataType: ParameterMapping,\n                    passBackKey: 'parameters',\n                  },\n                },\n                values: {\n                  ...props.values,\n                },\n              });\n            }}\n            className=\"m-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium mb-4\"\n          >\n            Add Parameter\n          </button>\n          {props.values.parameters?.map((parameter: any) => (\n            <div\n              key={parameter.name}\n              className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n            >\n              <div className=\"flex\">\n                <p className=\"font-bold\">{parameter.name}</p>\n              </div>\n              {parameter.description && (\n                <p className=\"text-sm mt-1 leading-4 whitespace-pre-wrap text-circle-gray-500\">\n                  {parameter.description}\n                </p>\n              )}\n              {parameter.defaultValue ? (\n                <p className=\"text-sm mt-1 leading-4 whitespace-pre-wrap text-circle-gray-500\">\n                  {parameter.description}\n                </p>\n              ) : (\n                <p className=\"text-sm mt-1 leading-4 whitespace-pre-wrap text-circle-gray-500\">\n                  Required\n                </p>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    />\n  );\n};\n\nexport default ParameterContainer;\n","import { Form, Formik } from 'formik';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { DataModel, NavigationComponent } from '../../../state/Store';\nimport BreadCrumbs from '../../containers/BreadCrumbs';\nimport ParameterContainer from '../../containers/ParametersContainer';\nimport { SubTypeMenuPageProps } from '../SubTypeMenu';\nimport TabbedMenu from '../TabbedMenu';\n\ntype InspectorDefinitionProps = DataModel & {\n  values: Record<string, object>;\n  editing?: boolean;\n  passBackKey?: string;\n  activeTab?: number;\n} & SubTypeMenuPageProps<any>;\n\nconst InspectorDefinitionMenu = (props: InspectorDefinitionProps) => {\n  const definitions = useStoreState((state) => state.definitions);\n  const generateConfig = useStoreActions((actions) => actions.generateConfig);\n  const navigateBack = useStoreActions((actions) => actions.navigateBack);\n  const setGuideStep = useStoreActions((actions) => actions.setGuideStep);\n  const guideStep = useStoreState((state) => state.guideStep);\n  const dataMapping = props.dataType;\n  const submitToStore = useStoreActions(\n    (actions) =>\n      (props.editing\n        ? dataMapping?.store.update(actions)\n        : dataMapping?.store.add(actions)) || actions.error,\n  );\n  const getIcon = (className: string) => {\n    let iconComponent = dataMapping?.components.icon;\n\n    if (iconComponent) {\n      let Icon = iconComponent;\n\n      return <Icon className={className} />;\n    }\n  };\n\n  const getValues = () => {\n    if (props.values) {\n      return props.values;\n    }\n\n    return props.subtype\n      ? dataMapping?.defaults[props.subtype]\n      : dataMapping?.defaults;\n  };\n\n  const tabs = ['PROPERTIES'];\n  const unpacked = getValues();\n  const subtype = props.subtype || dataMapping?.subtypes?.getSubtype(unpacked);\n\n  if (dataMapping?.parameters) {\n    tabs.push('PARAMETERS');\n  }\n\n  return (\n    <div className=\"h-full flex flex-col\">\n      <header>\n        <BreadCrumbs />\n        <div className=\"ml-6 py-3 flex\">\n          {getIcon('w-8 h-8 p-1 pl-0 mr-1')}\n          <h1 className=\"text-2xl font-bold\">\n            {props.editing ? 'Edit' : 'New'} {dataMapping?.name.singular}\n          </h1>\n        </div>\n      </header>\n      {dataMapping && (\n        <Formik\n          initialValues={{\n            type: props.subtype,\n            ...unpacked,\n          }}\n          validateOnBlur\n          validate={(values) => {\n            // TODO: handle error handling\n            // const newDefinition = dataMapping.transform(values, definitions);\n            // if (newDefinition) {\n            //   generateConfig({ [dataMapping.type]: [newDefinition] });\n            // }\n          }}\n          enableReinitialize\n          onSubmit={(values) => {\n            const newDefinition = dataMapping.transform(values, definitions);\n            const submitData = props.editing\n              ? { old: unpacked, new: newDefinition }\n              : newDefinition;\n\n            if (!props.passBackKey) {\n              submitToStore(submitData);\n            }\n\n            if (\n              !props.editing &&\n              guideStep &&\n              dataMapping.guide?.step === guideStep\n            ) {\n              setGuideStep(guideStep + 1);\n            }\n\n            navigateBack({\n              distance: 1,\n              apply: (values) => {\n                if (props.passBackKey) {\n                  values[props.passBackKey] = [\n                    ...(values[props.passBackKey] || []),\n                    newDefinition,\n                  ];\n                }\n                return values;\n              },\n            });\n            generateConfig();\n          }}\n        >\n          {(formikProps) => (\n            <Form className=\"flex flex-col flex-1\">\n              <TabbedMenu tabs={tabs} activeTab={props.activeTab || 0}>\n                <div className=\"p-6\">\n                  {dataMapping.subtypes &&\n                    (props.editing ? (\n                      <div className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\">\n                        <p className=\"font-bold\">\n                          {dataMapping.subtypes.definitions[subtype]?.text}\n                        </p>\n                        <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                          {\n                            dataMapping.subtypes.definitions[subtype]\n                              ?.description\n                          }\n                        </p>\n                      </div>\n                    ) : (\n                      <button\n                        className=\"p-4 mb-4 w-full border-circle-gray-300 border-2 rounded text-left\"\n                        type=\"button\"\n                        onClick={() => {\n                          props.selectSubtype();\n                        }}\n                      >\n                        <p className=\"font-bold\">\n                          {dataMapping.subtypes.definitions[subtype]?.text}\n                        </p>\n                        <p className=\"text-sm mt-1 leading-4 text-circle-gray-500\">\n                          {\n                            dataMapping.subtypes.definitions[subtype]\n                              ?.description\n                          }\n                        </p>\n                      </button>\n                    ))}\n                  {dataMapping.components.inspector({\n                    ...formikProps,\n                    definitions,\n                    subtype: subtype,\n                  })}\n                </div>\n                {dataMapping.parameters ? (\n                  <ParameterContainer\n                    dataMapping={dataMapping}\n                    values={formikProps.values}\n                  />\n                ) : null}\n              </TabbedMenu>\n\n              <span className=\"border-b border-circle-gray-300 mt-auto\" />\n              <button\n                type=\"submit\"\n                className=\"text-white text-sm font-medium p-2 m-6 bg-circle-blue duration:50 transition-all rounded-md2\"\n              >\n                {props.editing ? 'Save' : 'Create'} {dataMapping?.name.singular}\n              </button>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </div>\n  );\n};\n\nconst InspectorDefinitionMenuNav: NavigationComponent = {\n  Component: InspectorDefinitionMenu,\n  Label: (props: InspectorDefinitionProps) => {\n    return (\n      <p>\n        {props.editing ? 'Edit' : 'New'} {props.dataType?.name.singular}\n      </p>\n    );\n  },\n  Icon: (props: InspectorDefinitionProps) => {\n    let iconComponent = props.dataType?.components.icon;\n\n    if (!iconComponent) {\n      return null;\n    }\n\n    let DefinitionIcon = iconComponent;\n\n    return <DefinitionIcon className=\"w-6 h-8 py-2\" />;\n  },\n};\n\nexport { InspectorDefinitionMenuNav, InspectorDefinitionMenu };\n","import { Generable } from '@circleci/circleci-config-sdk/dist/src/lib/Components';\nimport ComponentMapping from '../../mappings/ComponentMapping';\nimport { useStoreActions } from '../../state/Hooks';\nimport { InspectorDefinitionMenuNav } from '../menus/definitions/InspectorDefinitionMenu';\n\nconst Definition = (props: { data: Generable; type: ComponentMapping }) => {\n  const Summary = props.type.components.summary;\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const setDragging = useStoreActions((actions) => actions.setDragging);\n\n  return (\n    <button\n      className=\"w-full mb-2 p-2 text-sm cursor-pointer text-left text-circle-black \n      bg-white border border-circle-gray-300 rounded-md2\"\n      draggable=\"true\"\n      onDragStart={(e) => {\n        const type = props.type;\n\n        if (type?.dragTarget) {\n          setDragging({ dataType: type, data: props.data });\n        }\n      }}\n      onClick={(e) => {\n        // this generated object should always have a single key\n        const generated = props.data.generate() as { [key: string]: object };\n        const flattened = Object.entries(generated).map(([key, value]) => ({\n          name: key,\n          ...value,\n        }))[0];\n\n        navigateTo({\n          component: InspectorDefinitionMenuNav,\n          props: { editing: true, values: flattened, dataType: props.type },\n        });\n      }}\n    >\n      <Summary data={props.data} />\n    </button>\n  );\n};\n\nexport default Definition;\n","import { IconProps } from '../IconProps';\n\nconst InfoIcon = (props: IconProps) => (\n  <svg viewBox=\"0 0 20 20\" className={props.className} fill={props.color}>\n    <path\n      fill-rule=\"evenodd\"\n      clip-rule=\"evenodd\"\n      d=\"M10 1.81818C5.4839 1.81818 1.81818 5.4839 1.81818 10C1.81818 14.5161 5.4839 18.1818 10 18.1818C14.5161 18.1818 18.1818 14.5161 18.1818 10C18.1818 5.4839 14.5161 1.81818 10 1.81818ZM0 10C0 4.47974 4.47974 0 10 0C15.5203 0 20 4.47974 20 10C20 15.5203 15.5203 20 10 20C4.47974 20 0 15.5203 0 10ZM10 4.54546C9.49796 4.54546 9.09094 4.95248 9.09094 5.45455C9.09094 5.95663 9.49796 6.36364 10 6.36364C10.5021 6.36364 10.9091 5.95663 10.9091 5.45455C10.9091 4.95248 10.5021 4.54546 10 4.54546ZM10 8.18182C9.49796 8.18182 9.09094 8.58883 9.09094 9.09091V14.5455C9.09094 15.0475 9.49796 15.4545 10 15.4545C10.5021 15.4545 10.9091 15.0475 10.9091 14.5455V9.09091C10.9091 8.58883 10.5021 8.18182 10 8.18182Z\"\n      fill=\"#161616\"\n    />\n  </svg>\n);\n\nexport default InfoIcon;\n","import { IconProps } from '../IconProps';\n\nexport interface ToolTipProps {\n  size?: number;\n  direction: 'right' | 'left' | 'top' | 'bottom';\n}\n\nconst ToolTipPointerIcon = (props: IconProps & ToolTipProps) => {\n  const size = props.size || 8;\n\n  const direction = {\n    right: `M 0 0 L ${size / 2} ${size / 2} L 0 ${size}`,\n    left: `M 0 ${size} L ${size / 2} ${size / 2} L 0 0`,\n    top: `M 0 ${size / 2} L ${size / 2} 0 L ${size} ${size / 2}`,\n    bottom: `M 0 0 L ${size / 2} ${size} L ${size} 0`,\n  };\n\n  const horizontal = props.direction === 'top' || props.direction === 'bottom';\n\n  return (\n    <svg\n      viewBox={`0 0 ${horizontal ? size : size / 2} ${\n        horizontal ? size / 2 : size\n      }`}\n      className={props.className}\n      fill={props.color || '#000000'}\n    >\n      <path d={direction[props.direction]} />\n    </svg>\n  );\n};\n\nexport default ToolTipPointerIcon;\n","import { MutableRefObject, ReactElement, useEffect, useState } from 'react';\nimport ToolTipPointerIcon from '../../icons/ui/ToolTipPointerIcon';\n\nexport interface ToolTipProps {\n  target: MutableRefObject<any>;\n  pointerColor?: string;\n  pointerClass?: string;\n  offsetX?: number;\n  offsetY?: number;\n  centered?: boolean;\n  facing?: 'top' | 'bottom' | 'left' | 'right';\n  children: ReactElement;\n}\n\nconst ToolTip = (props: ToolTipProps) => {\n  const [pos, setPos] = useState({ left: 0, top: 0 });\n\n  const updatePos = () => {\n    const rect = props.target.current.getBoundingClientRect();\n\n    setPos({ left: rect.x - rect.width - 32, top: rect.y + 6 });\n  };\n\n  useEffect(() => {\n    updatePos();\n  });\n\n  return (\n    <div style={pos} className=\"fixed flex z-10\">\n      {props.children}\n      <ToolTipPointerIcon\n        color=\"#FFFFFF\"\n        className=\"h-3 mt-4\"\n        direction=\"right\"\n      />\n    </div>\n  );\n};\n\nexport default ToolTip;\n","import { MutableRefObject } from 'react';\nimport InfoIcon from '../../icons/ui/InfoIcon';\nimport { useStoreState } from '../../state/Hooks';\nimport ToolTip from '../atoms/Tooltip';\n\nexport interface GuideContainerProps {\n  target: MutableRefObject<any>;\n  children: string;\n}\n\nconst GuideContainer = (props: GuideContainerProps) => {\n  const guideStep = useStoreState((state) => state.guideStep);\n\n  return (\n    <ToolTip target={props.target}>\n      <div className=\"w-80 p-4 bg-white drop-shadow-lg rounded-lg\">\n        <div className=\"flex flex-row\">\n          <InfoIcon className=\"w-5 h-5\" color=\"#000000\"></InfoIcon>\n          <div className=\"px-3 w-full\">\n            <header className=\"pb-3 font-bold leading-5\">\n              Step {guideStep} of 3\n            </header>\n            <div className=\"font-medium text-sm text-circle-gray-500 whitespace-pre-line\">\n              {props.children}\n            </div>\n            <div className=\"w-full flex flex-row pt-2\">\n              <button className=\" ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\">\n                Dismiss\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ToolTip>\n  );\n};\n\nexport default GuideContainer;\n","import { useRef } from 'react';\nimport ComponentMapping from '../../mappings/ComponentMapping';\nimport { useStoreActions, useStoreState } from '../../state/Hooks';\nimport ComponentInfo from '../atoms/ComponentInfo';\nimport Definition from '../atoms/Definition';\nimport {\n  InspectorDefinitionMenu,\n  InspectorDefinitionMenuNav,\n} from '../menus/definitions/InspectorDefinitionMenu';\nimport SubTypeMenuNav from '../menus/SubTypeMenu';\nimport CollapsibleList from './CollapsibleList';\nimport GuideContainer from './GuideContainer';\n\nexport interface DefinitionsProps {\n  type: ComponentMapping;\n  expanded?: boolean;\n  onChange?: (expanded: boolean) => void;\n}\n\nconst DefinitionsContainer = (props: DefinitionsProps) => {\n  const items = useStoreState(props.type.store.get);\n  const navigateTo = useStoreActions((actions) => actions.navigateTo);\n  const guideStep = useStoreState((state) => state.guideStep);\n  const ref = useRef(null);\n\n  return (\n    <div ref={ref} className=\"w-full p-4 pb-0\">\n      {props.type.guide && guideStep === props.type.guide.step && (\n        <GuideContainer target={ref}>{props.type.guide.info}</GuideContainer>\n      )}\n      <CollapsibleList\n        title={props.type.name.plural}\n        expanded={props.expanded}\n        onChange={props.onChange}\n        titleExpanded={\n          <button\n            onClick={() =>\n              navigateTo(\n                props.type.subtypes?.component\n                  ? {\n                      component: SubTypeMenuNav,\n                      props: {\n                        typePage: props.type.subtypes?.component,\n                        menuPage: InspectorDefinitionMenu,\n                        menuProps: { dataType: props.type },\n                      },\n                    }\n                  : {\n                      component: InspectorDefinitionMenuNav,\n                      props: { dataType: props.type },\n                    },\n              )\n            }\n            className=\"ml-auto tracking-wide hover:underline leading-6 text-sm text-circle-blue font-medium\"\n          >\n            New\n          </button>\n        }\n      >\n        <div className=\"w-full pl-2 pt-2\">\n          <ComponentInfo type={props.type} />\n          {(items || []).length > 0 ? (\n            items?.map((item) => (\n              <Definition data={item} key={item.name} type={props.type} />\n            ))\n          ) : (\n            <div className=\"font-medium text-sm text-circle-gray-500\">\n              No {props.type.name.plural} found.\n            </div>\n          )}\n        </div>\n      </CollapsibleList>\n      <div className=\"w-full p-2 border-b border-circle-gray-300\"></div>\n    </div>\n  );\n};\n\nexport default DefinitionsContainer;\n","import { Form, Formik } from 'formik';\nimport React from 'react';\nimport WorkflowIcon from '../../../icons/components/WorkflowIcon';\nimport { dataMappings } from '../../../mappings/ComponentMapping';\nimport { useStoreActions, useStoreState } from '../../../state/Hooks';\nimport { NavigationComponent } from '../../../state/Store';\nimport InspectorProperty from '../../atoms/form/InspectorProperty';\nimport DefinitionsContainer from '../../containers/DefinitionsContainer';\nimport TabbedMenu from '../TabbedMenu';\n\n/**\n * @see\n * @returns\n */\nconst DefinitionsMenu = (props: { expanded: boolean[] }) => {\n  /* TODO: DETERMINE PARAMETERS\n  const parameters = useStoreState((state) => state.parameters); \n  const defineParameter = useStoreActions((actions) => actions.defineParameter); */\n  // const generateConfig = useStoreActions((actions) => actions.generateConfig);\n  const workflowGraphs = useStoreState((state) => state.workflows);\n  const selectedWorkflow = useStoreState((state) => state.selectedWorkflow);\n  const updateConfig = useStoreActions((actions) => actions.generateConfig);\n  const persistProps = useStoreActions((actions) => actions.persistProps);\n  const workflow = workflowGraphs[selectedWorkflow];\n\n  return (\n    <div className=\"h-full bg-white flex flex-col overflow-y-auto\">\n      <header className=\"ml-4 mb-4 flex\">\n        <WorkflowIcon className=\"w-8 h-8 p-1 mr-1\" />\n        <h1 className=\"text-2xl font-bold\">{workflow.name}</h1>\n      </header>\n\n      <TabbedMenu tabs={['DEFINITIONS', 'PROPERTIES']}>\n        <div className=\"p-2 flex-1 h-full w-full flex-col\">\n          {dataMappings.map((mapping, index) => {\n            const dataType = mapping.mapping;\n\n            return (\n              <DefinitionsContainer\n                type={dataType}\n                expanded={props.expanded[index]}\n                onChange={(isExpanded) => {\n                  persistProps({\n                    ...props,\n                    expanded: props.expanded.map((expanded, i) =>\n                      i === index ? isExpanded : expanded,\n                    ),\n                  });\n                }}\n                key={dataType.name.plural}\n              />\n            );\n          })}\n        </div>\n        <div className=\"p-6\">\n          <Formik\n            initialValues={{ name: workflow.name }}\n            enableReinitialize\n            onSubmit={(values) => {}}\n          >\n            {(formikProps) => (\n              <Form className=\"flex flex-col flex-1\">\n                <InspectorProperty label=\"Name\" name=\"name\" />\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </TabbedMenu>\n\n      <span className=\"border-b border-circle-gray-300\" />\n      <button\n        className=\"text-white text-sm font-medium p-2 m-6 bg-circle-blue duration:50 transition-all rounded-md2\"\n        onClick={(e) => updateConfig()}\n      >\n        Generate Config\n      </button>\n    </div>\n  );\n};\n\nconst DefinitionsMenuNav: NavigationComponent = {\n  Component: DefinitionsMenu,\n  Label: (props: { expanded: boolean[] }) => <p>Definitions</p>,\n};\n\nexport default DefinitionsMenuNav;\n","import {\n  Config,\n  Job,\n  parameters,\n  parseConfig,\n  reusable,\n  Workflow\n} from '@circleci/circleci-config-sdk';\nimport { CustomCommand } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Commands/exports/Reusable';\nimport { CustomParameter } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters';\nimport { PipelineParameterLiteral } from '@circleci/circleci-config-sdk/dist/src/lib/Components/Parameters/types/CustomParameterLiterals.types';\nimport { Action, action } from 'easy-peasy';\nimport { MutableRefObject } from 'react';\nimport {\n  Elements,\n  FlowElement,\n  isNode,\n  Node,\n  SetConnectionId,\n  XYPosition\n} from 'react-flow-renderer';\nimport { v4 } from 'uuid';\nimport DefinitionsMenu from '../components/menus/definitions/DefinitionsMenu';\nimport ComponentMapping from '../mappings/ComponentMapping';\nimport JobMapping from '../mappings/JobMapping';\n\nexport interface WorkflowModel {\n  name: string;\n  id: string;\n  elements: Elements<any>;\n}\n\n/** Reusable definitions of CircleCIConfigObject */\nexport interface DefinitionModel /*extends CircleCIConfigObject*/ {\n  parameters: CustomParameter<PipelineParameterLiteral>[];\n  executors: reusable.ReusableExecutor[];\n  jobs: Job[];\n  commands: CustomCommand[];\n  workflows: Workflow[];\n}\n\nexport interface DataModel {\n  data?: any;\n  dataType?: ComponentMapping;\n}\n\nexport interface NavigationModel extends NavigationStop {\n  jumpedFrom?: NavigationStop;\n  from?: NavigationModel;\n}\n\nexport interface NavigationComponent {\n  Icon?: React.FunctionComponent<any>;\n  Component: React.FunctionComponent<any>;\n  Label: React.FunctionComponent<any>;\n}\n\nexport interface NavigationStop {\n  component: NavigationComponent;\n  props: { [key: string]: any };\n}\n\nexport interface StoreModel {\n  /** Last generated configuration */\n  config: string | undefined;\n  /** The configuration with proposed changes */\n  editingConfig: string | undefined;\n  /** Component definitions which are used to generate the configuration*/\n  definitions: DefinitionModel;\n  /** The current step of the guide */\n  guideStep?: number;\n  /** Node placeholder element info */\n  placeholder?: { index: number; id: string };\n  /** Array of workflow panes */\n  workflows: WorkflowModel[];\n  /** Allows for tracking of components and their props in NavigationPanel */\n  navigation: NavigationModel;\n\n  /** Data being dragged from definition */\n  dragging?: DataModel;\n  connecting?: {\n    start?: {\n      ref?: MutableRefObject<any>;\n      id: SetConnectionId;\n      name?: string;\n    };\n    end?: {\n      id: SetConnectionId;\n      pos?: XYPosition;\n      ref?: MutableRefObject<any>;\n      name?: string;\n    };\n  };\n  /** Currently selected workflow pane index */\n  selectedWorkflow: number;\n}\n\nexport interface UpdateType<T> {\n  old: T;\n  new: T;\n}\n\nexport interface StoreActions {\n  persistProps: Action<StoreModel, { [key: string]: object }>;\n  setDragging: Action<StoreModel, DataModel | undefined>;\n  setConnecting: Action<\n    StoreModel,\n    {\n      ref?: MutableRefObject<any>;\n      id: SetConnectionId;\n      name?: string;\n    }\n  >;\n  updateConnecting: Action<\n    StoreModel,\n    | {\n        ref?: MutableRefObject<any>;\n        id: SetConnectionId;\n        pos?: XYPosition;\n        name?: string;\n      }\n    | undefined\n  >;\n\n  setPlaceholder: Action<StoreModel, Node<any>>;\n  setGuideStep: Action<StoreModel, number | undefined>;\n\n  navigateTo: Action<StoreModel, NavigationStop & { values?: any }>;\n  navigateBack: Action<\n    StoreModel,\n    { distance?: number; apply?: (values: any) => any } | void\n  >;\n\n  addWorkflow: Action<StoreModel, string>;\n  selectWorkflow: Action<StoreModel, number>;\n  removeWorkflow: Action<StoreModel, WorkflowModel>;\n\n  addWorkflowElement: Action<StoreModel, FlowElement<any>>;\n  removeWorkflowElement: Action<StoreModel, string>;\n  setWorkflowElements: Action<StoreModel, Elements<any>>;\n\n  defineJob: Action<StoreModel, Job>;\n  updateJob: Action<StoreModel, UpdateType<Job>>;\n\n  /** TODO: implement job removal */\n  undefineJob: Action<StoreModel, Job>;\n\n  defineCommand: Action<StoreModel, CustomCommand>;\n  updateCommand: Action<StoreModel, UpdateType<CustomCommand>>;\n  undefineCommand: Action<StoreModel, CustomCommand>;\n\n  defineExecutor: Action<StoreModel, reusable.ReusableExecutor>;\n  updateExecutor: Action<StoreModel, UpdateType<reusable.ReusableExecutor>>;\n  undefineExecutor: Action<StoreModel, reusable.ReusableExecutor>;\n\n  defineParameter: Action<\n    StoreModel,\n    CustomParameter<PipelineParameterLiteral>\n  >;\n  updateParameter: Action<\n    StoreModel,\n    UpdateType<CustomParameter<PipelineParameterLiteral>>\n  >;\n  undefineParameter: Action<\n    StoreModel,\n    CustomParameter<PipelineParameterLiteral>\n  >;\n\n  loadConfig: Action<StoreModel, string>;\n  generateConfig: Action<StoreModel, void | Partial<DefinitionModel>>;\n  error: Action<StoreModel, any>;\n}\n\nconst Actions: StoreActions = {\n  persistProps: action((state, payload) => {\n    state.navigation = { ...state.navigation, props: payload };\n  }),\n  setConnecting: action((state, payload) => {\n    if (payload.ref) {\n      state.connecting = {\n        start: payload,\n      };\n    } else {\n      state.connecting = undefined;\n    }\n  }),\n  updateConnecting: action((state, payload) => {\n    if (state.connecting?.start) {\n      state.connecting = {\n        start: state.connecting.start,\n        end: payload,\n      };\n    }\n  }),\n  setPlaceholder: action((state, payload) => {\n    const workflow = state.workflows[state.selectedWorkflow];\n    if (state.placeholder /** && payload.overwrite */) {\n      state.workflows[state.selectedWorkflow] = {\n        ...workflow,\n        elements: workflow.elements.map((element) =>\n          element.id === state.placeholder?.id ? payload : element,\n        ),\n      };\n    } else {\n      workflow.elements.push(payload);\n    }\n\n    state.placeholder = {\n      index: workflow.elements.length - 1,\n      id: workflow.id,\n    };\n  }),\n  setGuideStep: action((state, payload) => {\n    state.guideStep = payload;\n  }),\n\n  navigateTo: action((state, payload) => {\n    const curNav = state.navigation;\n\n    if (curNav.jumpedFrom) {\n      state.navigation.jumpedFrom = undefined;\n    }\n\n    state.navigation = {\n      ...payload,\n      from: {\n        ...curNav,\n        props: { ...curNav.props, values: payload.values },\n      },\n    };\n  }),\n\n  navigateBack: action((state, payload) => {\n    const distance = payload?.distance || 1;\n\n    if (state.navigation.from) {\n      let travelTo = state.navigation;\n\n      for (let i = 0; i < distance; i++) {\n        if (travelTo.from) {\n          travelTo = travelTo.from;\n        } else {\n          throw new Error('Tried to navigate back to an undefined component!');\n        }\n      }\n\n      state.navigation = {\n        ...travelTo,\n        props: {\n          ...travelTo.props,\n          values:\n            payload?.apply?.(travelTo.props.values) || travelTo.props.values,\n        },\n        jumpedFrom: distance > 1 ? state.navigation : undefined,\n      };\n    } else {\n      state.navigation = { component: DefinitionsMenu, props: {} };\n    }\n  }),\n\n  setDragging: action((state, payload) => {\n    state.dragging = payload;\n  }),\n\n  addWorkflow: action((state, name) => {\n    state.workflows = state.workflows.concat({\n      name,\n      id: v4(),\n      elements: [],\n    });\n  }),\n  selectWorkflow: action((state, index) => {\n    state.selectedWorkflow = index;\n  }),\n  removeWorkflow: action((state, payload) => {\n    state.workflows = state.workflows.filter(\n      (workflow) => workflow.id !== payload.id,\n    );\n  }),\n\n  addWorkflowElement: action((state, payload) => {\n    const workflow = state.workflows[state.selectedWorkflow];\n\n    workflow.elements.push(payload);\n  }),\n  removeWorkflowElement: action((state, payload) => {\n    const workflow = state.workflows[state.selectedWorkflow];\n\n    state.workflows[state.selectedWorkflow] = {\n      ...workflow,\n      elements: workflow.elements.filter((element) => element.id !== payload),\n    };\n  }),\n  setWorkflowElements: action((state, payload) => {\n    state.workflows[state.selectedWorkflow].elements = payload;\n  }),\n\n  defineJob: action((state, payload) => {\n    state.definitions.jobs?.push(payload);\n  }),\n  updateJob: action((state, payload) => {\n    if (state.definitions.jobs) {\n      const workflows = state.workflows[state.selectedWorkflow];\n\n      workflows.elements = workflows.elements.map((e) =>\n        isNode(e) && e.type === 'job' && e.data.job.name === payload.old.name\n          ? { ...e, data: { ...e.data, job: payload.new } }\n          : e,\n      );\n\n      state.definitions.jobs = state.definitions.jobs.map((job) =>\n        job.name === payload.old.name ? payload.new : job,\n      );\n    }\n  }),\n  undefineJob: action((state, payload) => {\n    state.definitions.jobs = state.definitions.jobs?.filter(\n      (job) => job.name === payload.name,\n    );\n  }),\n\n  defineExecutor: action((state, payload) => {\n    state.definitions.executors = state.definitions.executors?.concat(payload);\n  }),\n  updateExecutor: action((state, payload) => {\n    state.definitions.executors = state.definitions.executors?.map((executor) =>\n      executor.name === payload.old.name ? payload.new : executor,\n    );\n  }),\n  undefineExecutor: action((state, payload) => {\n    state.definitions.executors?.filter(\n      (executor) => executor.name !== payload.name,\n    );\n  }),\n\n  defineParameter: action((state, payload) => {\n    state.definitions.parameters =\n      state.definitions.parameters?.concat(payload);\n  }),\n  updateParameter: action((state, payload) => {}),\n  undefineParameter: action((state, payload) => {\n    state.definitions.parameters?.filter(\n      (parameter) => parameter.name !== payload.name,\n    );\n  }),\n\n  defineCommand: action((state, payload) => {\n    state.definitions.commands = state.definitions.commands?.concat(payload);\n  }),\n  updateCommand: action((state, payload) => {}),\n  undefineCommand: action((state, payload) => {\n    state.definitions.commands?.filter(\n      (command) => command.name !== payload.name,\n    );\n  }),\n\n  error: action((state, payload) => {\n    console.error('An action was not found! ', payload);\n  }),\n\n  loadConfig: action((state, payload) => {\n    const config = parseConfig(payload);\n\n    state.definitions = {\n      workflows: config.workflows,\n      jobs: config.jobs,\n      executors: config.executors || [],\n      parameters: config.parameters?.parameters || [],\n      commands: config.commands || [],\n    };\n\n    state.config = config.stringify();\n  }),\n  generateConfig: action((state, payload) => {\n    const workflows = state.workflows.map((flow) => {\n      const jobs = flow.elements\n        .filter((element) => element.type === JobMapping.type)\n        .map((element) => element.data);\n\n      return new Workflow(flow.name, jobs);\n    });\n\n    const defs = state.definitions;\n    // This is a merged config preview. TODO: Refactor merging process.\n    const config = new Config(\n      false,\n      payload?.jobs ? [...defs.jobs, ...payload.jobs] : defs.jobs,\n      workflows,\n      payload?.executors\n        ? [...defs.executors, ...payload.executors]\n        : defs.executors,\n      payload?.commands\n        ? [...defs.commands, ...payload.commands]\n        : defs.commands,\n      defs.parameters.length > 0\n        ? new parameters.CustomParametersList<PipelineParameterLiteral>(\n            payload?.parameters\n              ? [...defs.parameters, ...payload.parameters]\n              : defs.parameters,\n          )\n        : undefined,\n    );\n\n    if (payload) {\n      state.editingConfig = config.stringify();\n    } else {\n      state.config = config.stringify();\n      state.editingConfig = undefined;\n    }\n  }),\n};\n\nconst Store: StoreModel & StoreActions = {\n  selectedWorkflow: 0,\n  editingConfig: undefined,\n  config: undefined,\n  guideStep: 1,\n  navigation: {\n    component: DefinitionsMenu,\n    props: { expanded: [true, true, false, false] },\n  },\n  definitions: {\n    commands: [],\n    executors: [],\n    jobs: [],\n    workflows: [],\n    parameters: [],\n  },\n  workflows: [\n    {\n      name: 'build-and-test',\n      elements: [],\n      id: v4(),\n    },\n  ],\n  ...Actions,\n};\n\nexport default Store;\n","import { createStore, StoreProvider } from 'easy-peasy';\nimport EditorPane from './components/panes/EditorPane';\nimport NavigationPane from './components/panes/NavigationPane';\nimport WorkflowsPane from './components/panes/WorkflowsPane';\nimport Store from './state/Store';\n\n// Workaround for https://github.com/ctrlplusb/easy-peasy/issues/741 \n// const StoreProviderOverride = StoreProvider as any;\n\nconst App = () => {\n  return (\n    <StoreProvider store={createStore(Store)}>\n      <section className=\"flex flex-row h-full\">\n        <section className=\"flex flex-col flex-nowrap flex-1\">\n          <WorkflowsPane />\n          <EditorPane />\n        </section>\n        <NavigationPane />\n      </section>\n    </StoreProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}